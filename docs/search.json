[{"path":"index.html","id":"overview","chapter":"1 Overview","heading":"1 Overview","text":"Overview spatial transcriptomics workshop.","code":""},{"path":"intro.html","id":"intro","chapter":"2 Introduction","heading":"2 Introduction","text":"Intro/Welcome 10-15 minsCheck everyone can login servers (10m)Link intro slides.Workshop style - interactiveSchedule","code":""},{"path":"background.html","id":"background","chapter":"3 Background","heading":"3 Background","text":"Background (Conceptual) 25 mins (aim reduce)high-level overview spatial fits existing omics technologiesSimilarities differences single cell, bulk, visiumBasic techs\nComparison techs, ones use, ?\nComparison techs, ones use, ?Questions like know noob:\n’s cost-effective tech?\none used samples conditions interest?\nConsiderations study design, .e. many replicates\n’s cost-effective tech?one used samples conditions interest?Considerations study design, .e. many replicatesWhich tools packages use\nR vs. Python\nSfe (biconductor vs seurat)\nR vs. PythonSfe (biconductor vs seurat)","code":""},{"path":"exampleexperiment.html","id":"exampleexperiment","chapter":"4 Example Experiment","heading":"4 Example Experiment","text":"Background (Workshop) 15 mins (aim reduce)E.g. one cosmx studies https://swbioinf.github.io/spatialsnippets/index_data.html\nLikely need subsample data?\nLikely need subsample data?data isReplicate key analyses plots, explaining “X instead Y” throughout.NotesIf reproduce something ’ll figure 1d UMAP celltypes, maybe celltype proportions (time permits.). Maybe Figure 1b simplified - heatmap marker genes.=======Today’s workshop use data paper Macrophage neutrophil heterogeneity single-cell spatial resolution human inflammatory bowel disease (Garrido-Trigo et al. 2023).study explored macrophage neutorphil subtypes localisation across immflammatory bowel disease using combination single cell RNAseq (10X), spatial RNAseq (cosmx). authors made raw annotated data available (code). also browseable interface : https://servidor2-ciberehd.upc.es/external/garrido/app/study included 9 cosmx slides colonic biopsies3x HC - Healthy controls3x UC - Ulcerative colitis3x CD - Chrones’s diseaseWe basic processing 9 samples - QC, clustering visualisation.","code":""},{"path":"aims.html","id":"aims","chapter":"5 Aims for today","heading":"5 Aims for today","text":"Start backwards - plots makeOften difficult understand point tutorial start dataIdentify minimal end--end analysis/analysesSpatial new field - lot new tools development","code":""},{"path":"input-data.html","id":"input-data","chapter":"6 Input Data","heading":"6 Input Data","text":"data look like get ? Examine raw data.Explain e.g. cosmx detail, refer similarities e.g. xeniumLoad data objectBrief explanation different data structuresSample annotation: Applying sample names individual slides. Mention difficulty multiple samples per slide (can recommend approach?)=====","code":""},{"path":"input-data.html","id":"the-raw-data","chapter":"6 Input Data","heading":"6.1 The raw data","text":"cosmx SMI slide (like experiment).Flat files : need processing. Typically directory flat files read whole, don’t need worry much. note images .\nSLIDE-polygons.csv.gz : Cell borders\nSLIDE_exprMat_file.csv.gz : Counts genes per cell (Counts matrix)\nSLIDE_fov_positions_file.csv.gz : Location FOVs slide\nSLIDE_metadata_file.csv.gz : Cell level QC metadata\nSLIDE_tx_file.csv.gz : Location individual transcripts.\nSLIDE-polygons.csv.gz : Cell bordersSLIDE_exprMat_file.csv.gz : Counts genes per cell (Counts matrix)SLIDE_fov_positions_file.csv.gz : Location FOVs slideSLIDE_metadata_file.csv.gz : Cell level QC metadataSLIDE_tx_file.csv.gz : Location individual transcripts.Raw files : Giant ugly directory lots files including microscopy images.\nRawFiles/SLIDE/RUN_CODE/CellStatsDir/Morphology2D : Location images\nhttps://github.com/Nanostring-Biostats/CosMxDACustomModules/blob/main/Export/CosMxDAExportSetup.docx\nRawFiles/SLIDE/RUN_CODE/CellStatsDir/Morphology2D : Location imageshttps://github.com/Nanostring-Biostats/CosMxDACustomModules/blob/main/Export/CosMxDAExportSetup.docxFor Xenium slide just one typical output directory; discuss formats section data archiving, , software tools take directory whole.","code":""},{"path":"input-data.html","id":"loading-the-data","chapter":"6 Input Data","heading":"6.2 Loading the data","text":"","code":""},{"path":"input-data.html","id":"load-one-sample-from-raw-data","chapter":"6 Input Data","heading":"6.2.1 Load one sample from raw data","text":"Load libraries, pathsThe code load one sample follows.sample annotated experimental details. particular\nstudy one sample per slide (easy!), typically .","code":"\nlibrary(Seurat)## Loading required package: SeuratObject## Loading required package: sp## \n## Attaching package: 'SeuratObject'## The following objects are masked from 'package:base':\n## \n##     intersect, t\nlibrary(SeuratObject)\nlibrary(tidyverse)## ── Attaching core tidyverse packages ──────────────────────────────── tidyverse 2.0.0 ──\n## ✔ dplyr     1.1.4     ✔ readr     2.1.5\n## ✔ forcats   1.0.0     ✔ stringr   1.5.1\n## ✔ ggplot2   3.5.2     ✔ tibble    3.3.0\n## ✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n## ✔ purrr     1.1.0## ── Conflicts ────────────────────────────────────────────────── tidyverse_conflicts() ──\n## ✖ dplyr::filter() masks stats::filter()\n## ✖ dplyr::lag()    masks stats::lag()\n## ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\nlibrary(here)## here() starts at /home/s.williams/projects/intro-spatial-transcriptomics-workshop\n## Paths\ndata_dir              <- file.path(\"data/\")\nraw_data_dir          <- file.path(\"raw_data/\")\n## Load one sample?\nsample_path = file.path(raw_data_dir, \"GSM7473682_HC_a\")\nso <- LoadNanostring(sample_path,\n                     assay='RNA',\n                     fov=\"GSM7473682_HC_a\")\n\n\n# HOWEVER \n# This default method drops most of the metatdata in the seurat object.\n# e.g. what fov is each cell a member of? is missing.\n\n#so@meta.data\n#orig.ident nCount_RNA nFeature_RNA\n#1_1   SeuratProject        368          189\n#2_1   SeuratProject        810          286\n#3_1   SeuratProject        119           74\n\n# An alternative function is here;\n# In time, this should be fixed within seruat\n# See comments here\n#https://github.com/satijalab/seurat/discussions/9261\nsource(\"scripts/LoadNanostring_edited_function.R\")\nso$tissue_sample   <- \"HC_A\"\nso$group           <- \"HC\"\nso$condition       <- \"Healthy Controls\""},{"path":"input-data.html","id":"load-all-samples-from-raw-data","chapter":"6 Input Data","heading":"6.2.2 Load all samples from raw data","text":"Code example goes (run)","code":""},{"path":"input-data.html","id":"load-the-workshop-data","chapter":"6 Input Data","heading":"6.2.3 Load the workshop data","text":"dataset subset experimenal data - first 5 fov views , CD HC sample groups.","code":"\nso_raw <- readRDS(file.path(data_dir, \"GSE234713_CosMx_IBD_seurat_00_raw_subsampled.RDS\"))"},{"path":"qc.html","id":"qc","chapter":"7 QC","heading":"7 QC","text":"Basic QC plots + filtering (20min)(Negative probes using cosmx)","code":""},{"path":"basic-visualisation.html","id":"basic-visualisation","chapter":"8 Basic visualisation","heading":"8 Basic visualisation","text":"Plot tissue (10min)Plot gene expression (10min)","code":""},{"path":"reduce-dimensionality---umaps.html","id":"reduce-dimensionality---umaps","chapter":"9 Reduce dimensionality - UMAPs","heading":"9 Reduce dimensionality - UMAPs","text":"steps number-crunching get generating nice UMAP representation data.steps needed?Normalisation Different cells different total target counts. Normalisation allows comparable.Identification highly variable features (feature selection) Identifying variable features allows retaining real biological variability data reduce noise data.Scaling data: Highly expresed genes can overpower signal less expresed genes equal importance. Within cell assumption underlying RNA content constant. ADimensionality reduction (PCA): Imagine gene represents dimension - axis plot. plot expression two genes simple scatterplot. genome gene panel 100s 1000s genes - collate information genes way allows visualise 2 dimensional image. dimensionality reduction comes , calculate meta-features contains combinations variation different genes. hundreds genes, end 10s meta-featuresRun non-linear dimensional reduction (UMAP): Finally, make UMAP plot arranges cells logical eazy visualise way. Note tSNE algorithm (makes tSNE plots) older alternative method UMAP.","code":""},{"path":"reduce-dimensionality---umaps.html","id":"normalisation","chapter":"9 Reduce dimensionality - UMAPs","heading":"9.1 Normalisation","text":"Start ‘splitting’ object sample assay .default, use ‘LogNormalize’ method seurat - described NormaliseData function help:“LogNormalize: Feature counts cell divided total counts cell multiplied scale.factor. natural-log transformed using log1’”INFO: indepth discussion normalisation spatial datasetsw see Atta et al (2024)\nhttps://genomebiology.biomedcentral.com/articles/10.1186/s13059-024-03303-w aware spatial-aware methods SpaNorm (https://genomebiology.biomedcentral.com/articles/10.1186/s13059-025-03565-y)","code":"\n# Basic preprocessing\n# Split layers out again\n# https://satijalab.org/seurat/articles/seurat5_integration\nso <- split(so, f = so$orig.ident)\nso <- NormalizeData(so)"},{"path":"reduce-dimensionality---umaps.html","id":"find-highly-variable-genes.","chapter":"9 Reduce dimensionality - UMAPs","heading":"9.2 Find Highly variable genes.","text":"genes vary cell types/states sample?don’t yet know anything celltypes stats, can make assumption genes high variance anre probably reflecting biological state. contrast ‘housekeeper’ gene even expression across cell types won’t helpful grouping cells.data split sample, seurat identify variable genes within sample combine information. seurat5 documentation layers:\n“Note since data split layers, normalization variable feature identification performed batch independently (consensus set variable features automatically identified).”point represents one gene - red ones top 200 ‘highly variable genes’ HVGs. firm rule many HVGs want. whole transcriptome 2000, 1000 genel 200. exact number doesn’t matter much, want capture genes main group low variance genes.can list genes:","code":"\nso <- FindVariableFeatures(so, nfeatures = 200)\nVariableFeaturePlot(so)\nhead(VariableFeatures(so))## [1] \"IGHG1\"  \"IGHM\"   \"TPSB2\"  \"IGHG2\"  \"JCHAIN\" \"TPSAB1\""},{"path":"reduce-dimensionality---umaps.html","id":"scale-data","chapter":"9 Reduce dimensionality - UMAPs","heading":"9.3 Scale data","text":"default, scaleData function scale HVGs.Note presence single ‘scale.data’ layer.","code":"\nso <- ScaleData(so) # Just 200 variable features\nso## An object of class Seurat \n## 999 features across 50662 samples within 2 assays \n## Active assay: RNA (980 features, 200 variable features)\n##  13 layers present: counts.GSM7473682.HC.a, counts.GSM7473683.HC.b, counts.GSM7473684.HC.c, counts.GSM7473688.CD.a, counts.GSM7473689.CD.b, counts.GSM7473690.CD.c, data.GSM7473682.HC.a, data.GSM7473683.HC.b, data.GSM7473684.HC.c, data.GSM7473688.CD.a, data.GSM7473689.CD.b, data.GSM7473690.CD.c, scale.data\n##  1 other assay present: negprobes\n##  6 spatial fields of view present: GSM7473682.HC.a GSM7473683.HC.b GSM7473684.HC.c GSM7473688.CD.a GSM7473689.CD.b GSM7473690.CD.c"},{"path":"reduce-dimensionality---umaps.html","id":"pca","chapter":"9 Reduce dimensionality - UMAPs","heading":"9.4 PCA","text":"Now run PCA (Principal Component Analysis).Now ‘pca’ reduction listed object.digging seurat object, just look, can see value PC (Principal Compenent) cell.contexts (e.g. Bulk RNAseq experiemnts), PCs can enough group explore difference betwen samples. e.g. See [plot DEseq2 documentation] (https://bioconductor.org/packages/devel/bioc/vignettes/DESeq2/inst/doc/DESeq2.html#principal-component-plot---samples).can try , sheer number cells diversity among , rarely works spatial single cell datasets - simply blob.Plot PC1 vs PC2, PC3 vs PC4.","code":"\nso <- RunPCA(so, features = VariableFeatures(so))\nso## An object of class Seurat \n## 999 features across 50662 samples within 2 assays \n## Active assay: RNA (980 features, 200 variable features)\n##  13 layers present: counts.GSM7473682.HC.a, counts.GSM7473683.HC.b, counts.GSM7473684.HC.c, counts.GSM7473688.CD.a, counts.GSM7473689.CD.b, counts.GSM7473690.CD.c, data.GSM7473682.HC.a, data.GSM7473683.HC.b, data.GSM7473684.HC.c, data.GSM7473688.CD.a, data.GSM7473689.CD.b, data.GSM7473690.CD.c, scale.data\n##  1 other assay present: negprobes\n##  1 dimensional reduction calculated: pca\n##  6 spatial fields of view present: GSM7473682.HC.a GSM7473683.HC.b GSM7473684.HC.c GSM7473688.CD.a GSM7473689.CD.b GSM7473690.CD.c\nso@reductions$pca@cell.embeddings[1:10,1:5]##               PC_1       PC_2        PC_3        PC_4      PC_5\n## HC_a_1_1  6.217419 -1.8061005 -0.25805262  0.61965670 -2.562506\n## HC_a_2_1  7.650406 -4.9282210  2.56525240  1.33029222 -4.631155\n## HC_a_3_1  5.524381  0.6807641  0.46285057 -1.26006689 -4.810636\n## HC_a_4_1  3.798449  1.8721929  0.10183529 -0.06891715 -3.358003\n## HC_a_5_1  6.690936 -3.8183472  0.17136972  1.03536202 -4.176235\n## HC_a_6_1  6.193700 -5.9931664  2.46855416  0.25142038 -3.261390\n## HC_a_7_1  5.531542 -2.0889510  0.72048496  1.22893547 -3.697925\n## HC_a_8_1  6.869279 -4.0229095  0.15006296  2.51955461 -2.704131\n## HC_a_9_1  6.880725 -2.3290435  0.86859571  0.26676695 -4.046725\n## HC_a_10_1 6.177942 -2.8228681  0.08023504  2.98939960 -5.696438\nDimPlot(so, reduction = \"pca\", group.by='tissue_sample')\nDimPlot(so, reduction = \"pca\", group.by='tissue_sample', dims=c(3,4))"},{"path":"reduce-dimensionality---umaps.html","id":"umap","chapter":"9 Reduce dimensionality - UMAPs","heading":"9.5 UMAP","text":"UMAP (Uniform Manifold Approximation Projection) method summarising\nmultiple principal components fewer dimensions vizualisation - generally just x y.UMAP :Non-linear: Distances cells PCA linear, wheras UMAP non-linear. Ie. larger distance two cells neccessarily mean greater transcriptional difference.Non-deterministic: data produce different layout, though generally functions use set random numbers avoid . Even - removeing just one cell shuffle result, nearly impossible task reproduce existing UMAP! General trends remain stable.interested exploring UMAP works futher, Understanding UMAP page excellent interactive resource.build UMAP need decide many principal components want summarise. ‘elbow plot’ shows proportion variance explained PC - starting PC1 - alwasy explains . Eventually variance explained drops base level - extra PCs aren’t adding much .general rule thumb pick standard variantion levels plot - ‘elbow’. harm rounding . Typically 10-20, higher complex datasets.choose 15.build UMAP first 15 PCs.plot - coloured tissue sample.","code":"\nElbowPlot(so)\nnum_dims <- 15\nso <- RunUMAP(so, dims=1:num_dims)## Warning: The default method for RunUMAP has changed from calling Python UMAP via reticulate to the R-native UWOT using the cosine metric\n## To use Python UMAP via reticulate, set umap.method to 'umap-learn' and metric to 'correlation'\n## This message will be shown once per session\n# you can specify reduction='umap' explicity\n# DimPlot(so, group.by='tissue_sample', reduction = 'umap') \n# But by default, if a umap exists in the object, Dimplot will plot it.\nDimPlot(so, group.by='tissue_sample') "},{"path":"reduce-dimensionality---umaps.html","id":"using-umap-to-visualise-your-data","chapter":"9 Reduce dimensionality - UMAPs","heading":"9.6 Using UMAP to visualise your data","text":"Now time plot interesting looking metadata UMAP.QC : Slide, total RNA, negative probes, slide, batchExperimental: Groups, samples, timepoint, treatment, mouseWe want identify trends biases technical experimentally interesting.View categorical factors ‘DimPlot’, continuous onces ‘FeaturePlot’. split.parameter quite useful separate certain variables, like experimental group.little separation condition - appears due individual (’ll adress next).can see negative probe counts line total counts. higher counts concentrated certain regions UMAP.overall % negative probes random.Likewise, can also helpful plot genes point. can provide list.","code":"\nDimPlot(so, group.by='tissue_sample')\nDimPlot(so, group.by='condition')\nDimPlot(so, group.by='tissue_sample', split.by='condition')\nFeaturePlot(so, 'nCount_RNA') \nFeaturePlot(so, 'nCount_negprobes') \nFeaturePlot(so, 'pc_neg') \nFeaturePlot(so, c('CD74','PIGR','IGHA1','VWF'), ncol=2 )"},{"path":"batch-correction.html","id":"batch-correction","chapter":"10 Batch Correction","heading":"10 Batch Correction","text":"","code":""},{"path":"batch-correction.html","id":"do-we-need-batch-correction","chapter":"10 Batch Correction","heading":"10.1 Do we need batch correction?","text":"regions UMAP can see separation sample. common spatial data, especially working human data.(fact, example isn’t bad, purposes work, go process batch correction).becomes obvious split plot sample well;continue cell clustering analysis point, might find build clusters around individual samples. instead want make cell clusters form around cell ‘types’ (transcriptionallly similar cell states) across multiple samples, can matched compared across experimental groups.","code":"\nDimPlot(so, group.by='tissue_sample')\nDimPlot(so, group.by='tissue_sample', split.by = 'tissue_sample', ncol = 3)"},{"path":"batch-correction.html","id":"running-batch-correction","chapter":"10 Batch Correction","heading":"10.2 Running batch correction","text":"can apply batch correction integration method adjust principal components deemphasise betweeen-sample effect. Seurat implements several methods, full ‘Introduction scRNA-seq integration’ vignette. use ‘harmony’ method, Korsunsky et al 2019: https://www.nature.com/articles/s41592-019-0619-0Its worth noting methods can applied combine data multiple experiments (e.g. public data), even technologies!one computationally intensive steps analysis. can take hours run use many Gb RAM, scaling size experiment.code integration generate new UMAP. run code today!Instead, load version object theis data.Looking summary seurat object see 3x dimensional reductions:pca : original principal components, batch correction.harmony : harmony output, values like PCA, adjusted batch correction.umap : new umap based harmony (passed reduction = ‘harmony’ RunUMAP). overwrote old UMAP.plotting new UMAP, samples move overlayed. make better vizualisation.","code":"  # https://satijalab.org/seurat/articles/seurat5_integration\n  # Slow?\n  so <- IntegrateLayers(so, method = HarmonyIntegration, orig.reduction = \"pca\", new.reduction = \"harmony\")\n  so <- RunUMAP(so, dims=1:num_dims, reduction = 'harmony')\n\n  DimPlot(so, group.by='tissue_sample')\n\n  \n  ## TODO Remove clustering from this section, update object\n  #so <- FindNeighbors(so, reduction = \"harmony\", dims = 1:num_dims)\n  #so <- FindClusters(so, resolution = 0.2)\n  # don't talk about optimisation of clusters, point people at single cell resources.\n}\nseurat_file_01_preprocessed_subset <- here(\"data\", \"GSE234713_CosMx_IBD_seurat_01_preprocessed_subsampled.RDS\")\nso <- readRDS(seurat_file_01_preprocessed_subset)\nso## An object of class Seurat \n## 999 features across 50662 samples within 2 assays \n## Active assay: RNA (980 features, 200 variable features)\n##  13 layers present: counts.GSM7473682.HC.a, counts.GSM7473683.HC.b, counts.GSM7473684.HC.c, counts.GSM7473688.CD.a, counts.GSM7473689.CD.b, counts.GSM7473690.CD.c, data.GSM7473682.HC.a, data.GSM7473683.HC.b, data.GSM7473684.HC.c, data.GSM7473688.CD.a, data.GSM7473689.CD.b, data.GSM7473690.CD.c, scale.data\n##  1 other assay present: negprobes\n##  3 dimensional reductions calculated: pca, harmony, umap\n##  6 spatial fields of view present: GSM7473682.HC.a GSM7473683.HC.b GSM7473684.HC.c GSM7473688.CD.a GSM7473689.CD.b GSM7473690.CD.c\nDimPlot(so, group.by='orig.ident')\nDimPlot(so, group.by='tissue_sample', split.by = 'tissue_sample', ncol = 3)"},{"path":"clustering.html","id":"clustering","chapter":"11 Clustering","heading":"11 Clustering","text":"","code":""},{"path":"clustering.html","id":"generate-clusters","chapter":"11 Clustering","heading":"11.1 Generate Clusters","text":"generate clusters, first build ‘neighbourhood’ graph. network graph, links cells basis transcriptional similarity (‘neighbours’). something looking directly, simply stored inside object, importantin input downstream steps like clustering.Forget run ’ll generate error.Note need specify ‘harmony’ reduction, else default ‘pca’. Just like UMAP, want clusters represent different cell types states, differences individuals.Now clustering can simple running ‘FindClusters’.ACTIVITY: Choose clustering resolution 0.1 2 - plot UMAP spatially. Share chat. resuolution good? can decide?res workshop, ’ll use resolution 0.2.info regarding selecting ‘right’ clustering resolution, consider clustree package. example use context single cell transcriptomics.","code":"\nso <- FindNeighbors(so, reduction = \"harmony\", dims = 1:15)\nso <- FindClusters(so)  ## Modularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck\n## \n## Number of nodes: 50662\n## Number of edges: 1195831\n## \n## Running Louvain algorithm...\n## Maximum modularity in 10 random starts: 0.8230\n## Number of communities: 12\n## Elapsed time: 34 seconds\nDimPlot(so, group.by='seurat_clusters')\nso <- FindClusters(so, resolution = 0.2)  ## Modularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck\n## \n## Number of nodes: 50662\n## Number of edges: 1195831\n## \n## Running Louvain algorithm...\n## Maximum modularity in 10 random starts: 0.9031\n## Number of communities: 7\n## Elapsed time: 30 seconds\nDimPlot(so, group.by='seurat_clusters')"},{"path":"clustering-labeling.html","id":"clustering-labeling","chapter":"12 Clustering Labeling","heading":"12 Clustering Labeling","text":"Classifing cells meaningful celltypes (cell states) time consuming, extremely improtant, part spatial analysis.may involve pulling together multiple lines evidence assign celltype labels cluster labels. approaches outlined :","code":""},{"path":"clustering-labeling.html","id":"cluster-markers","chapter":"12 Clustering Labeling","heading":"12.1 Cluster Markers","text":"Plot cluster specific genes heatmap subset 5000 cells.","code":"\nDimPlot(so, group.by='seurat_clusters')\nso <- JoinLayers(so)\nmarker_table <- FindAllMarkers(so, group.by='seurat_clusters', only.pos=TRUE)## Warning: The `slot` argument of `GetAssayData()` is deprecated as of SeuratObject 5.0.0.\n## ℹ Please use the `layer` argument instead.\n## ℹ The deprecated feature was likely used in the Seurat package.\n##   Please report the issue at <https://github.com/satijalab/seurat/issues>.\n## This warning is displayed once every 8 hours.\n## Call `lifecycle::last_lifecycle_warnings()` to see where this warning was generated.## Warning: `PackageCheck()` was deprecated in SeuratObject 5.0.0.\n## ℹ Please use `rlang::check_installed()` instead.\n## ℹ The deprecated feature was likely used in the Seurat package.\n##   Please report the issue at <https://github.com/satijalab/seurat/issues>.\n## This warning is displayed once every 8 hours.\n## Call `lifecycle::last_lifecycle_warnings()` to see where this warning was generated.\nmarker_table_top <- marker_table %>%\n    group_by(cluster) %>%\n    dplyr::filter(avg_log2FC > 1, p_val_adj < 0.01) %>%\n    slice_head(n = 5)\n#DefaultLayer(so[['RNA']]) <- 'data'\nso.mini <- so[, sample(colnames(so), size =5000, replace=F)]## Warning: Not validating FOV objects## Warning: Not validating Centroids objects\n## Not validating Centroids objects## Warning: Not validating FOV objects## Warning: Not validating Centroids objects## Warning: Not validating FOV objects\n## Not validating FOV objects\n## Not validating FOV objects## Warning: Not validating Seurat objects## Warning: Not validating FOV objects## Warning: Not validating Centroids objects\n## Not validating Centroids objects## Warning: Not validating FOV objects## Warning: Not validating Centroids objects## Warning: Not validating FOV objects\n## Not validating FOV objects\n## Not validating FOV objects## Warning: Not validating Seurat objects## Warning: Not validating FOV objects## Warning: Not validating Centroids objects\n## Not validating Centroids objects## Warning: Not validating FOV objects## Warning: Not validating Centroids objects## Warning: Not validating FOV objects\n## Not validating FOV objects\n## Not validating FOV objects## Warning: Not validating Seurat objects## Warning: Not validating FOV objects## Warning: Not validating Centroids objects\n## Not validating Centroids objects## Warning: Not validating FOV objects## Warning: Not validating Centroids objects## Warning: Not validating FOV objects\n## Not validating FOV objects\n## Not validating FOV objects## Warning: Not validating Seurat objects## Warning: Not validating FOV objects## Warning: Not validating Centroids objects\n## Not validating Centroids objects## Warning: Not validating FOV objects## Warning: Not validating Centroids objects## Warning: Not validating FOV objects\n## Not validating FOV objects\n## Not validating FOV objects## Warning: Not validating Seurat objects## Warning: Not validating FOV objects## Warning: Not validating Centroids objects\n## Not validating Centroids objects## Warning: Not validating FOV objects## Warning: Not validating Centroids objects## Warning: Not validating FOV objects\n## Not validating FOV objects\n## Not validating FOV objects## Warning: Not validating Seurat objects\nDoHeatmap(so.mini, assay='RNA', features = marker_table_top$gene) "},{"path":"clustering-labeling.html","id":"old-cell-typing-by-reference","chapter":"12 Clustering Labeling","heading":"12.2 OLD Cell typing by reference","text":"number tools classify cells types basis similarity reference dataset. SingleR one tool.first need aquire reference dataset.typical reference public single cell datasets matched celltype trusted annotation. Look relevant paper provided GEO accession number similar. Note every study remembers publish annotations alongside raw data, authors might willing supply processed dataset ask.Alternativly, databases single cell datasets - see Human Cell Atlas CELLxGENE datasets. databases also let browse data online - excellent resource design cell annotation stages; can look gene expression particular celltype see matches seeing.also package ‘celldex’ hosts small number reference datasets ready go. today, use ‘human primary cell atalas’ reference, includes celltypes various different sites; Note sample specific reference better!reference dataset approach can choose celltypes .Note singleR celldex bioconductor packages - don’t natively work Seurat objects. Rather SpatialExperiments/SpatialFeatureExperiment/SingleCellExperiments/SummarizedExperiment (software folk; inherit SummarizedExperiment)build ‘SingleCellExperiment’ object - singleR works just fine matrix expression.Store back object, plot. many celltypes show nicely, aren’t relevant.TODO: Ideally use better reference doesn’t need much post processing useful! make clearer done .nice line classifications clusters.","code":"\nlibrary(SingleR)## Warning: replacing previous import 'S4Arrays::makeNindexFromArrayViewport' by\n## 'DelayedArray::makeNindexFromArrayViewport' when loading 'SummarizedExperiment'\nlibrary(celldex)## Warning: replacing previous import 'S4Arrays::makeNindexFromArrayViewport' by\n## 'DelayedArray::makeNindexFromArrayViewport' when loading 'HDF5Array'\n# Gives us a 'SummarizedExperiment object'\nse_ref <- celldex::HumanPrimaryCellAtlasData()\nunique(se_ref$label.main)##  [1] \"DC\"                   \"Smooth_muscle_cells\"  \"Epithelial_cells\"    \n##  [4] \"B_cell\"               \"Neutrophils\"          \"T_cells\"             \n##  [7] \"Monocyte\"             \"Erythroblast\"         \"BM & Prog.\"          \n## [10] \"Endothelial_cells\"    \"Gametocytes\"          \"Neurons\"             \n## [13] \"Keratinocytes\"        \"HSC_-G-CSF\"           \"Macrophage\"          \n## [16] \"NK_cell\"              \"Embryonic_stem_cells\" \"Tissue_stem_cells\"   \n## [19] \"Chondrocytes\"         \"Osteoblasts\"          \"BM\"                  \n## [22] \"Platelets\"            \"Fibroblasts\"          \"iPS_cells\"           \n## [25] \"Hepatocytes\"          \"MSC\"                  \"Neuroepithelial_cell\"\n## [28] \"Astrocyte\"            \"HSC_CD34+\"            \"CMP\"                 \n## [31] \"GMP\"                  \"MEP\"                  \"Myelocyte\"           \n## [34] \"Pre-B_cell_CD34-\"     \"Pro-B_cell_CD34+\"     \"Pro-Myelocyte\"\nnorm_matrix <- GetAssayData(so, assay = 'RNA', layer = 'data')\npredictions <- SingleR::SingleR(test = norm_matrix, ref = se_ref, labels = se_ref$label.main)\nso$singleR_labels <- predictions$labels\nDimPlot(so, group.by='singleR_labels')\nso$singleR_delta.next <- predictions$delta.next\nVlnPlot(so, features='singleR_delta.next', group.by='singleR_labels', pt.size = 0) + NoLegend()\nmin_delta_next_threshold <- 0.05\nmin_cells_in_group       <- 50\nso$singleR_labels_thresh <- ifelse ( so$singleR_delta.next > min_delta_next_threshold ,  so$singleR_labels, NA)\nDimPlot(so, group.by='singleR_labels_thresh')\ncounts_per_group <- table(so$singleR_labels_thresh)\nkeep_groups      <- names(counts_per_group)[counts_per_group > 50]\nso$singleR_labels_filt <- ifelse( so$singleR_labels_thresh %in% keep_groups ,    so$singleR_labels_thresh, NA) \nDimPlot(so, group.by='singleR_labels_filt')\n## Celltype proportions\ncelltype_summary_table<- so@meta.data %>% as_tibble() %>%\n  group_by(seurat_clusters, singleR_labels_filt ) %>%\n  summarise(n_cells = n())## `summarise()` has grouped output by 'seurat_clusters'. You can override using the\n## `.groups` argument.\nggplot(celltype_summary_table, aes(x=seurat_clusters, y=n_cells, fill=singleR_labels_filt)) +\n  geom_bar(position=\"fill\", stat=\"identity\") +\n  theme_bw() +\n  coord_flip() +\n  theme(legend.position = \"bottom\") +\n  scale_y_continuous(expand = c(0,0)) +\n  ggtitle( \"Celltyping vs clustering\") "},{"path":"clustering-labeling.html","id":"cell-typing-by-reference","chapter":"12 Clustering Labeling","heading":"12.3 Cell typing by reference","text":"number tools classify cells types basis similarity reference dataset. SingleR one tool.first need aquire reference dataset.typical reference public single cell datasets matched celltype trusted annotation. Look relevant paper provided GEO accession number similar. Note every study remembers publish annotations alongside raw data, authors might willing supply processed dataset ask.Alternativly, databases single cell datasets - see Human Cell Atlas CELLxGENE datasets. databases also let browse data online - excellent resource design cell annotation stages; can look gene expression particular celltype see matches seeing.tabula sapiens project (paper) built single cell atalas good number human tissues. data browseable hosted cellXgene tabular sapiens collectionThese colon tissue samples, large intestine set listed (includes colon samples). Conveniently, can browse data online check suitable: via cellXgene interfaceBroad cell class looks pretty good. ’s colon included. individual level effect UMAP (stem cells limited 1-2 samples). ’ll work, theres easy link download data.reference dataset pre-downloaded onto VMsIts .h5ad file, common pythonic analyses. Luckily can use schard package read R directly. seurat object.Instead builds SingleCellExperiment object - data format central bioconductor packages (fine, singleR bioconductor !). SCE objects work quite similarly seurat objects, different notation - e.g. colData rowData access cell gene information respectively.TODO: LOAD PRECALLED cell_typeing.RUPDATE BETTER CALLING.","code":"\nlibrary(SingleR)# Do not run, but these were the linux shell commands to get and rename the data\nwget https://datasets.cellxgene.cziscience.com/82e3b450-6704-43de-8036-af1838daa7df.h5ad\nmv 82e3b450-6704-43de-8036-af1838daa7df.h5ad tabula_sapiens_large_intestine_82e3b450-6704-43de-8036-af1838daa7df.h5ad\nlibrary(schard)\nsce.ts_intestine = schard::h5ad2sce(ts_largeintestine_h5ad)\nDT::data.table(head(colData(sce.ts_intestine)))\nDT::data.table(head(rowData(sce.ts_intestine)))"},{"path":"clustering-labeling.html","id":"spatial-examination-of-plots","chapter":"12 Clustering Labeling","heading":"12.4 Spatial examination of plots","text":"clusters defined purely transcriptional similarity, plotted tissue, location pattern emerges.\ncan see cluster 1 epithelial cells.Plotting whole sample, zoomed region just one FOVs (cosmx definition) within .","code":"\nso_sample <- so[, so$tissue_sample==\"HC_a\"]## Warning: Not validating FOV objects## Warning: Not validating Centroids objects\n## Not validating Centroids objects## Warning: Not validating FOV objects## Warning: Not validating Centroids objects## Warning: Not validating FOV objects\n## Not validating FOV objects\n## Not validating FOV objects## Warning: Not validating Seurat objects\n## Not validating Seurat objects\n## Not validating Seurat objects\n## Not validating Seurat objects\n## Not validating Seurat objects\n## Not validating Seurat objects\nImageDimPlot(so_sample,\n             fov          = \"GSM7473682.HC.a\",\n             axes = TRUE,\n             border.color = NA, border.size = 0.1,\n             group.by = \"seurat_clusters\",\n             boundaries   = \"segmentation\",\n             crop=TRUE,\n             nmols = 10000)\nso_fov    <- so_sample[, so_sample$fov==1]## Warning: Not validating FOV objects## Warning: Not validating Centroids objects\n## Not validating Centroids objects## Warning: Not validating FOV objects## Warning: Not validating Centroids objects## Warning: Not validating FOV objects\n## Not validating FOV objects\n## Not validating FOV objects## Warning: Not validating Seurat objects\nImageDimPlot(so_fov,\n             fov          = \"GSM7473682.HC.a\",\n             axes = TRUE,\n             border.color = NA, border.size = 0.1,\n             group.by = \"seurat_clusters\",\n             boundaries   = \"segmentation\",\n             crop=TRUE,\n             nmols = 10000)\nImageDimPlot(so_fov,\n             fov          = \"GSM7473682.HC.a\",\n             axes = TRUE,\n             border.color = NA, border.size = 0.1,\n             group.by = \"singleR_labels_filt\",\n             boundaries   = \"segmentation\",\n             crop=TRUE,\n             nmols = 10000)## Warning: Removing 1669 cells missing data for vars requested"},{"path":"clustering-labeling.html","id":"recording-celltype-annotations.","chapter":"12 Clustering Labeling","heading":"12.5 Recording celltype annotations.","text":"","code":"\n## Apply some cluster names\nso$cluster_code <- factor( paste0(\"c\", so$seurat_clusters),   levels=paste0('c', levels(so$seurat_clusters)))\nIdents(so) <- so$cluster_code\n\ncluster_content <- list(\n  c0 = \"Unknown\",\n  c1 = \"IntestinalEpithelia\", # PIGR expression, epithelial location\n  c2 = \"Fibroblasts\",         # Collagen rich\n  c3 = \"Plasma\",              # MZB1, DERL3, JCHAIN\n  c4 = \"Endothelia\",          # Mostly endothelial in cell typing.\n  c5 = \"Unknown\"\n)\n\n# c5 => c5: Mono\nso$cluster_labels <- factor (\n  paste0(names(cluster_content[as.character(so$cluster_code)]), \": \", cluster_content[as.character(so$cluster_code)]) ,\n  levels = paste0( names(cluster_content), \": \", cluster_content)\n)\nDimPlot(so, group.by='cluster_labels')"},{"path":"clustering-labeling.html","id":"pull-in-real-annotation","chapter":"12 Clustering Labeling","heading":"12.5.1 Pull in real annotation","text":"authors study shared actual celltypes. lieu trying figur - directly import annotationFrom can use celltype labels visualiation:use comparisons.","code":"\nannotation_file <- 'data/GSE234713_CosMx_annotation.csv.gz'\nanno_table <- read_csv(annotation_file, show_col_types = F)\nanno_table <- as.data.frame(anno_table)\nrownames(anno_table) <- anno_table$id\n\nso$celltype <- factor(anno_table[colnames(so),]$subset)\nso_fov    <- so[, so$tissue_sample==\"HC_a\" & so_sample$fov==1]## Warning in so$tissue_sample == \"HC_a\" & so_sample$fov == 1: longer object\n## length is not a multiple of shorter object length## Warning: Not validating FOV objects## Warning: Not validating Centroids objects\n## Not validating Centroids objects## Warning: Not validating FOV objects## Warning: Not validating Centroids objects## Warning: Not validating FOV objects\n## Not validating FOV objects\n## Not validating FOV objects## Warning: Not validating Seurat objects\n## Not validating Seurat objects\n## Not validating Seurat objects\n## Not validating Seurat objects\n## Not validating Seurat objects\n## Not validating Seurat objects\nImageDimPlot(so_fov,\n             fov          = \"GSM7473682.HC.a\",\n             axes = TRUE,\n             border.color = NA, border.size = 0.1,\n             group.by = \"celltype\",\n             boundaries   = \"segmentation\",\n             crop=TRUE,\n             nmols = 10000)## Warning: Removing 1 cells missing data for vars requested\n## Celltype proportions\ncelltype_summary_table<- so@meta.data %>% as_tibble() %>%\n  group_by(condition, tissue_sample, celltype ) %>%\n  summarise(n_cells = n())## `summarise()` has grouped output by 'condition', 'tissue_sample'. You can override\n## using the `.groups` argument.\nggplot(celltype_summary_table, aes(x=tissue_sample, y=n_cells, fill=celltype)) +\n  geom_bar(position=\"fill\", stat=\"identity\") +\n  theme_bw() +\n  coord_flip() +\n  theme(legend.position = \"bottom\") +\n  scale_y_continuous(expand = c(0,0)) +\n  ggtitle( \"Celltype composition\") +\n  facet_wrap(~condition, ncol = 1, scales = 'free_y')"},{"path":"analysis-example.html","id":"analysis-example","chapter":"13 Analysis example","heading":"13 Analysis example","text":"Differential expression exampleDifferential expression exampleInfo testsInfo testsLink directly?\nhttps://swbioinf.github.io/spatialsnippets/e_DEPseudobulk_insitu.htmlNB: ’ll probably update material include spatial plots.Code load whole dataset","code":""},{"path":"analysis-example.html","id":"spatially-informed-differntial-expression","chapter":"13 Analysis example","heading":"13.1 Spatially informed differntial expression","text":"particular tests quite simple - doesn’t use spatial information. However, define groups spatial way, can use approach test spatial hypotheses;e.g. Given cancer samples, identify cancer stroma microenviromnemt. (NB: ? Potentially ‘BuildNicheAssay’ functionality see )Expression T cells within tumour regions vs normal tissue:\n(T cells within tumour niche) - (T cells stromal niche)\n(T cells within tumour niche) - (T cells stromal niche)Cancer cell expression immune hot vs cold region\n(Cancer cells near T-cells) - (Cancer cells near T-cells)\n(Cancer cells near T-cells) - (Cancer cells near T-cells)","code":""},{"path":"analysis-example-1.html","id":"analysis-example-1","chapter":"14 Analysis example","heading":"14 Analysis example","text":"Link directly??? https://swbioinf.github.io/spatialsnippets/e_spatiallyRestrictedGenes.htmlWhat genes irregular expression across tissue? might localised particular region indicate spatial activity.Considering signle gene, calculate ‘spatial autocorrelation’ MoransI test.","code":"\nlibrary(tidyverse)\nlibrary(Seurat)\nlibrary(DT)## \n## Attaching package: 'DT'## The following object is masked from 'package:Seurat':\n## \n##     JS## The following object is masked from 'package:SeuratObject':\n## \n##     JS\n#so <- readRDS(\"data/GSE234713_CosMx_IBD_seurat_01_preprocessed_subsampled.RDS\" )"},{"path":"analysis-example-1.html","id":"run-moransi-once","chapter":"14 Analysis example","heading":"14.1 Run MoransI once","text":"run quickly, going arbitraily reduce number variable features just 20.real line, pick VariableFeatures (genes).","code":"\nso <- FindVariableFeatures(so, nfeatures=10)## Finding variable features for layer counts\nthe_sample <- 'CD_a'\nthe_fov    <- 'GSM7473688.CD.a'\nso_sample  <- subset(so, tissue_sample == the_sample)## Warning: Not validating Seurat objects\n## Not validating Seurat objects\n## Not validating Seurat objects## Warning: Not validating FOV objects## Warning: Not validating Centroids objects\n## Not validating Centroids objects## Warning: Not validating FOV objects## Warning: Not validating Centroids objects## Warning: Not validating FOV objects\n## Not validating FOV objects\n## Not validating FOV objects## Warning: Not validating Seurat objects\n## Not validating Seurat objects\n## Not validating Seurat objects\n# If the Seurat method above crashes (segfault), a workaround is\n# funning FindSpatiallyVariableFeatures at the assay level\nso_sample_assay <- so_sample[['RNA']]\ntc <- GetTissueCoordinates(so_sample)\nrownames(tc)<- tc$cell\n# When given an 'assay' FindSpatiallyVariableFeatures returns an assay. Put it back in the seurat object\nso_sample[['RNA']] <- FindSpatiallyVariableFeatures(\n  so_sample_assay,\n  layer = \"scale.data\",\n  spatial.location = tc,\n  features = VariableFeatures(so_sample)[1:10], # Just a random few variable genes for testing!\n  selection.method = \"moransi\",\n  nfeatures=10 # mark top 10 spatially variable\n)## Computing Moran's I## Warning in dist(x = pos): NAs introduced by coercion## Found more than one class \"dist\" in cache; using the first, from namespace 'spam'## Also defined by 'BiocGenerics'## Found more than one class \"dist\" in cache; using the first, from namespace 'spam'## Also defined by 'BiocGenerics'\n#Put feature name as a column in the feature metadata\nso_sample[[\"RNA\"]]@meta.data$feature <-rownames(so_sample[[\"RNA\"]])\ngene_metadata <- so_sample[[\"RNA\"]]@meta.data\n\ngene_metadata_morans <- \n  filter(gene_metadata, !is.na(moransi.spatially.variable.rank)) %>%\n  select(feature, \n         MoransI_observed, MoransI_p.value, moransi.spatially.variable,moransi.spatially.variable.rank) %>% \n  arrange(moransi.spatially.variable.rank)\n  \nDT::datatable(gene_metadata_morans, width = '100%')\ntop_genes = gene_metadata_morans$feature[1:3]\ntop_genes## [1] \"KRT20\" \"IGHM\"  \"AQP8\"\nImageDimPlot(so_sample, \n             molecules = top_genes, \n             group.by = 'tissue_sample', cols = c(\"grey30\"), # Make all cells grey.\n             boundaries = \"segmentation\",\n             border.color = NA, axes = T, crop=TRUE)"},{"path":"analysis-example-1.html","id":"run-moransi-on-all-samples","chapter":"14 Analysis example","heading":"14.2 Run MoransI on all samples","text":"expression pattern gene disrupted?","code":"\n# Record moransI results for each sample, one by one.\nsamples <- unique(so@meta.data$tissue_sample)\nresults_list <- list()\nfor (the_sample in samples) {\n  \n  so.sample <- subset( so, subset= tissue_sample == the_sample)\n\n  so.sample.assay <- so.sample[['RNA']]\n  tc <- GetTissueCoordinates(so.sample)\n  rownames(tc)<- tc$cell\n  # When given an 'assay' FindSpatiallyVariableFeatures returns an assay. Put it back in the seurat object.\n  so.sample[['RNA']] <- FindSpatiallyVariableFeatures(\n    so.sample.assay,\n    layer = \"scale.data\",\n    spatial.location = tc,\n    features = VariableFeatures(so.sample),\n    selection.method = \"moransi\",\n    nfeatures=10 # mark top 10 spatially variable\n    )\n  # --- end workaround\n  \n  \n  # Format output table\n  so.sample[[\"RNA\"]]@meta.data$feature <- rownames(so.sample[[\"RNA\"]])\n  gene_metadata <- so.sample[[\"RNA\"]]@meta.data\n  results <- \n  select(gene_metadata, \n         feature, \n         MoransI_observed, \n         MoransI_p.value, \n         moransi.spatially.variable,\n         moransi.spatially.variable.rank) %>% \n    filter(!is.na(moransi.spatially.variable.rank)) %>% # only tested\n    arrange(moransi.spatially.variable.rank) %>%\n    mutate(sample = the_sample) %>%\n    select(sample, everything())\n\n  \n  results_list[[the_sample]] <- results\n}## Warning: Not validating FOV objects## Warning: Not validating Centroids objects\n## Not validating Centroids objects## Warning: Not validating FOV objects## Warning: Not validating Centroids objects## Warning: Not validating FOV objects\n## Not validating FOV objects\n## Not validating FOV objects## Warning: Not validating Seurat objects\n## Not validating Seurat objects\n## Not validating Seurat objects\n## Not validating Seurat objects\n## Not validating Seurat objects\n## Not validating Seurat objects## Computing Moran's I## Warning in dist(x = pos): NAs introduced by coercion\n## Warning in dist(x = pos): Not validating Seurat objects## Warning: Not validating FOV objects## Warning: Not validating Centroids objects\n## Not validating Centroids objects## Warning: Not validating FOV objects## Warning: Not validating Centroids objects## Warning: Not validating FOV objects\n## Not validating FOV objects\n## Not validating FOV objects## Warning: Not validating Seurat objects\n## Not validating Seurat objects\n## Not validating Seurat objects\n## Not validating Seurat objects\n## Not validating Seurat objects## Computing Moran's I## Warning in dist(x = pos): NAs introduced by coercion\n## Warning in dist(x = pos): Not validating Seurat objects\n## Warning in dist(x = pos): Not validating Seurat objects## Warning: Not validating FOV objects## Warning: Not validating Centroids objects\n## Not validating Centroids objects## Warning: Not validating FOV objects## Warning: Not validating Centroids objects## Warning: Not validating FOV objects\n## Not validating FOV objects\n## Not validating FOV objects## Warning: Not validating Seurat objects\n## Not validating Seurat objects\n## Not validating Seurat objects\n## Not validating Seurat objects## Computing Moran's I## Warning in dist(x = pos): NAs introduced by coercion\n## Warning in dist(x = pos): Not validating Seurat objects\n## Warning in dist(x = pos): Not validating Seurat objects\n## Warning in dist(x = pos): Not validating Seurat objects## Warning: Not validating FOV objects## Warning: Not validating Centroids objects\n## Not validating Centroids objects## Warning: Not validating FOV objects## Warning: Not validating Centroids objects## Warning: Not validating FOV objects\n## Not validating FOV objects\n## Not validating FOV objects## Warning: Not validating Seurat objects\n## Not validating Seurat objects\n## Not validating Seurat objects## Computing Moran's I## Warning in dist(x = pos): NAs introduced by coercion\n## Warning in dist(x = pos): Not validating Seurat objects\n## Warning in dist(x = pos): Not validating Seurat objects\n## Warning in dist(x = pos): Not validating Seurat objects\n## Warning in dist(x = pos): Not validating Seurat objects## Warning: Not validating FOV objects## Warning: Not validating Centroids objects\n## Not validating Centroids objects## Warning: Not validating FOV objects## Warning: Not validating Centroids objects## Warning: Not validating FOV objects\n## Not validating FOV objects\n## Not validating FOV objects## Warning: Not validating Seurat objects\n## Not validating Seurat objects## Computing Moran's I## Warning in dist(x = pos): NAs introduced by coercion\n## Warning in dist(x = pos): Not validating Seurat objects\n## Warning in dist(x = pos): Not validating Seurat objects\n## Warning in dist(x = pos): Not validating Seurat objects\n## Warning in dist(x = pos): Not validating Seurat objects\n## Warning in dist(x = pos): Not validating Seurat objects## Warning: Not validating FOV objects## Warning: Not validating Centroids objects\n## Not validating Centroids objects## Warning: Not validating FOV objects## Warning: Not validating Centroids objects## Warning: Not validating FOV objects\n## Not validating FOV objects\n## Not validating FOV objects## Warning: Not validating Seurat objects## Computing Moran's I## Warning in dist(x = pos): NAs introduced by coercion\n# Collect output result \nresults_all <- bind_rows(results_list)\n# unique set of genes that were top 10 morans in any sample\nplot_genes <- filter(results_all, moransi.spatially.variable.rank <= 10) %>% pull(feature) %>% unique()\nggplot(filter(results_all, feature %in% plot_genes), aes(x=feature, y=MoransI_observed)) +\n  geom_boxplot() +\n  geom_point( mapping=aes(col=sample)) +\n  theme_bw() +\n  ggtitle(\"MoransI Per sample\")"},{"path":"analysis-example-1.html","id":"explore-moransi-results","chapter":"14 Analysis example","heading":"14.3 Explore moransI results","text":"IGKC high autocorrelation overA highly variable gene, low(er) spatial autocorrelationWhats going ? ’s big clump CCL21","code":"\nso.CD_a <- subset( so, subset= tissue_sample == 'CD_a')## Warning: Not validating Seurat objects\n## Not validating Seurat objects\n## Not validating Seurat objects## Warning: Not validating FOV objects## Warning: Not validating Centroids objects\n## Not validating Centroids objects## Warning: Not validating FOV objects## Warning: Not validating Centroids objects## Warning: Not validating FOV objects\n## Not validating FOV objects\n## Not validating FOV objects## Warning: Not validating Seurat objects\n## Not validating Seurat objects\n## Not validating Seurat objects\nso.HC_a <- subset( so, subset= tissue_sample == 'HC_a')## Warning: Not validating FOV objects## Warning: Not validating Centroids objects\n## Not validating Centroids objects## Warning: Not validating FOV objects## Warning: Not validating Centroids objects## Warning: Not validating FOV objects\n## Not validating FOV objects\n## Not validating FOV objects## Warning: Not validating Seurat objects\n## Not validating Seurat objects\n## Not validating Seurat objects\n## Not validating Seurat objects\n## Not validating Seurat objects\n## Not validating Seurat objects\np1 <- ImageDimPlot(so.CD_a, \n             molecules = 'IGKC', \n             group.by = 'tissue_sample', cols = c(\"grey30\"), # Make all cells grey.\n             boundaries = \"segmentation\", border.color = NA, axes = T, crop=TRUE)## Warning in brewer.pal(n = length(x = levels(x = molecules$molecule)), name = \"Set1\"): minimal value for n is 3, returning requested palette with 3 different levels\np2 <- ImageDimPlot(so.HC_a, \n             molecules = 'IGKC', \n             group.by = 'tissue_sample', cols = c(\"grey30\"), # Make all cells grey.\n             boundaries = \"segmentation\", border.color = NA, axes = T, crop=TRUE)## Warning in brewer.pal(n = length(x = levels(x = molecules$molecule)), name = \"Set1\"): minimal value for n is 3, returning requested palette with 3 different levels\np1 + p2 \np1 <- ImageDimPlot(so.CD_a, \n             molecules = 'CHGA', \n             group.by = 'tissue_sample', cols = c(\"grey30\"), # Make all cells grey.\n             boundaries = \"segmentation\", border.color = NA, axes = T, crop=TRUE)## Warning in brewer.pal(n = length(x = levels(x = molecules$molecule)), name = \"Set1\"): minimal value for n is 3, returning requested palette with 3 different levels\np2 <- ImageDimPlot(so.HC_a, \n             molecules = 'CHGA', \n             group.by = 'tissue_sample', cols = c(\"grey30\"), # Make all cells grey.\n             boundaries = \"segmentation\", border.color = NA, axes = T, crop=TRUE)## Warning in brewer.pal(n = length(x = levels(x = molecules$molecule)), name = \"Set1\"): minimal value for n is 3, returning requested palette with 3 different levels\np1 + p2 \np1 <- ImageDimPlot(so.CD_a, \n             molecules = 'CCL21', \n             group.by = 'tissue_sample', cols = c(\"grey30\"), # Make all cells grey.\n             boundaries = \"segmentation\", border.color = NA, axes = T, crop=TRUE)## Warning in brewer.pal(n = length(x = levels(x = molecules$molecule)), name = \"Set1\"): minimal value for n is 3, returning requested palette with 3 different levels\np2 <- ImageDimPlot(so.HC_a, \n             molecules = 'CCL21', \n             group.by = 'tissue_sample', cols = c(\"grey30\"), # Make all cells grey.\n             boundaries = \"segmentation\", border.color = NA, axes = T, crop=TRUE)## Warning in brewer.pal(n = length(x = levels(x = molecules$molecule)), name = \"Set1\"): minimal value for n is 3, returning requested palette with 3 different levels\np1 + p2 \nImageDimPlot(so.HC_a, group.by = 'fov')\nImageDimPlot(subset(so.HC_a, fov==4), \n             molecules = 'CCL21', \n             group.by = 'celltype', alpha=0.3,# Show clusters, but faded \n             boundaries = \"segmentation\",  border.color = NA, axes = T, crop=TRUE) ## Warning: Not validating FOV objects## Warning: Not validating Centroids objects\n## Not validating Centroids objects## Warning: Not validating FOV objects## Warning: Not validating Centroids objects## Warning: Not validating FOV objects\n## Not validating FOV objects\n## Not validating FOV objects## Warning: Not validating Seurat objects## Warning: Removing 1 cells missing data for vars requested## Warning in brewer.pal(n = length(x = levels(x = molecules$molecule)), name = \"Set1\"): minimal value for n is 3, returning requested palette with 3 different levels\nImageDimPlot(subset(so.HC_a, fov==4),\n             molecules = c('CCL21','CD8A','MS4A1'), \n             group.by = 'celltype', alpha=0.3,# Show clusters, but faded \n             boundaries = \"segmentation\",  border.color = NA, axes = T, crop=TRUE) ## Warning: Not validating FOV objects## Warning: Not validating Centroids objects\n## Not validating Centroids objects## Warning: Not validating FOV objects## Warning: Not validating Centroids objects## Warning: Not validating FOV objects\n## Not validating FOV objects\n## Not validating FOV objects## Warning: Not validating Seurat objects## Warning: Removing 1 cells missing data for vars requested"},{"path":"analysis-example-1.html","id":"co-occurance-tests-potential-addition","chapter":"14 Analysis example","heading":"14.4 Co-occurance tests? (Potential addition)","text":"Try test foc co-occurance CCL21 cluuster (MS4A1)Easiest way might conversion SFE use voyager per bivariat stats workflow: https://pachterlab.github.io/voyager/articles/bivariate.html","code":""},{"path":"next-steps.html","id":"next-steps","chapter":"15 Next steps","heading":"15 Next steps","text":"","code":""},{"path":"next-steps.html","id":"the-scope-of-what-was-done-with-this-data","chapter":"15 Next steps","heading":"15.1 The scope of what was done with this data:","text":"Wrap (10)\npreprocessed data, now run tests/analysis => spatial sampler resource.Summarise Garrido-Trigo et al actually dataset paper;Macrophage proximity testsIntegration single cell dataintegration spatial omics…","code":""},{"path":"next-steps.html","id":"other-techniques.","chapter":"15 Next steps","heading":"15.2 Other techniques.","text":"Q&(whatever)Extra:\nAboutSegmentation? Use defaults.Questions addressHow combine multiple samplesHow annotate multiple samples one slide (wish knew)X","code":""},{"path":"resources.html","id":"resources","chapter":"16 Resources","heading":"16 Resources","text":"Links various useful resources.Seurat spatial vignette (imaging-based ) : load plot spatial data seurat - covers different technologies.Voyager Documentaion: bioconductor package spatial analyses, centered around SpatialFeatureExperiment objectsSCverse: ecosystem analyseing single cell spatial single cell data python.Spatial Sampler : Worked examples code snippets run various statitical tests single cell spatial data.","code":""},{"path":"references.html","id":"references","chapter":"References","heading":"References","text":"","code":""}]

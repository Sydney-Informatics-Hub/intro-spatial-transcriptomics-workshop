[{"path":"index.html","id":"overview","chapter":"1 Overview","heading":"1 Overview","text":"Overview spatial transcriptomics workshop.","code":""},{"path":"intro.html","id":"intro","chapter":"2 Introduction","heading":"2 Introduction","text":"Intro/Welcome 10-15 minsCheck everyone can login servers (10m)Link intro slides.Workshop style - interactiveSchedule","code":""},{"path":"background.html","id":"background","chapter":"3 Background","heading":"3 Background","text":"Background (Conceptual) 25 mins (aim reduce)high-level overview spatial fits existing omics technologiesSimilarities differences single cell, bulk, visiumBasic techs\nComparison techs, ones use, ?\nComparison techs, ones use, ?Questions like know noob:\n’s cost-effective tech?\none used samples conditions interest?\nConsiderations study design, .e. many replicates\n’s cost-effective tech?one used samples conditions interest?Considerations study design, .e. many replicatesWhich tools packages use\nR vs. Python\nSfe (biconductor vs seurat)\nR vs. PythonSfe (biconductor vs seurat)","code":""},{"path":"exampleexperiment.html","id":"exampleexperiment","chapter":"4 Example Experiment","heading":"4 Example Experiment","text":"Background (Workshop) 15 mins (aim reduce)E.g. one cosmx studies https://swbioinf.github.io/spatialsnippets/index_data.html\nLikely need subsample data?\nLikely need subsample data?data isReplicate key analyses plots, explaining “X instead Y” throughout.NotesIf reproduce something ’ll figure 1d UMAP celltypes, maybe celltype proportions (time permits.). Maybe Figure 1b simplified - heatmap marker genes.=======Today’s workshop use data paper Macrophage neutrophil heterogeneity single-cell spatial resolution human inflammatory bowel disease (Garrido-Trigo et al. 2023).study explored macrophage neutorphil subtypes localisation across immflammatory bowel disease using combination single cell RNAseq (10X), spatial RNAseq (cosmx). authors made raw annotated data available (code). also browseable interface : https://servidor2-ciberehd.upc.es/external/garrido/app/study included 9 cosmx slides colonic biopsies3x HC - Healthy controls3x UC - Ulcerative colitis3x CD - Chrones’s diseaseWe basic processing 9 samples - QC, clustering visualisation.","code":""},{"path":"aims.html","id":"aims","chapter":"5 Aims for today","heading":"5 Aims for today","text":"Start backwards - plots makeOften difficult understand point tutorial start dataIdentify minimal end--end analysis/analysesSpatial new field - lot new tools development","code":""},{"path":"input-data.html","id":"input-data","chapter":"6 Input Data","heading":"6 Input Data","text":"data look like get ? Examine raw data.Explain e.g. cosmx detail, refer similarities e.g. xeniumLoad data objectBrief explanation different data structuresSample annotation: Applying sample names individual slides. Mention difficulty multiple samples per slide (can recommend approach?)=====","code":""},{"path":"input-data.html","id":"the-raw-data","chapter":"6 Input Data","heading":"6.1 The raw data","text":"cosmx SMI slide (like experiment).Flat files : need processing. Typically directory flat files read whole, don’t need worry much. note images .\nSLIDE-polygons.csv.gz : Cell borders\nSLIDE_exprMat_file.csv.gz : Counts genes per cell (Counts matrix)\nSLIDE_fov_positions_file.csv.gz : Location FOVs slide\nSLIDE_metadata_file.csv.gz : Cell level QC metadata\nSLIDE_tx_file.csv.gz : Location individual transcripts.\nSLIDE-polygons.csv.gz : Cell bordersSLIDE_exprMat_file.csv.gz : Counts genes per cell (Counts matrix)SLIDE_fov_positions_file.csv.gz : Location FOVs slideSLIDE_metadata_file.csv.gz : Cell level QC metadataSLIDE_tx_file.csv.gz : Location individual transcripts.Raw files : Giant ugly directory lots files including microscopy images.\nRawFiles/SLIDE/RUN_CODE/CellStatsDir/Morphology2D : Location images\nhttps://github.com/Nanostring-Biostats/CosMxDACustomModules/blob/main/Export/CosMxDAExportSetup.docx\nRawFiles/SLIDE/RUN_CODE/CellStatsDir/Morphology2D : Location imageshttps://github.com/Nanostring-Biostats/CosMxDACustomModules/blob/main/Export/CosMxDAExportSetup.docxFor Xenium slide just one typical output directory; discuss formats section data archiving, , software tools take directory whole.","code":""},{"path":"input-data.html","id":"loading-the-data","chapter":"6 Input Data","heading":"6.2 Loading the data","text":"","code":""},{"path":"input-data.html","id":"load-one-sample-from-raw-data","chapter":"6 Input Data","heading":"6.2.1 Load one sample from raw data","text":"Load libraries, pathsThe code load one sample follows.sample annotated experimental details. particular\nstudy one sample per slide (easy!), typically .","code":"\nlibrary(Seurat)## Loading required package: SeuratObject## Loading required package: sp## \n## Attaching package: 'SeuratObject'## The following objects are masked from 'package:base':\n## \n##     intersect, t\nlibrary(SeuratObject)\nlibrary(tidyverse)## ── Attaching core tidyverse packages ───────────────────── tidyverse 2.0.0 ──\n## ✔ dplyr     1.1.4     ✔ readr     2.1.5\n## ✔ forcats   1.0.0     ✔ stringr   1.5.1\n## ✔ ggplot2   3.5.2     ✔ tibble    3.3.0\n## ✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n## ✔ purrr     1.1.0## ── Conflicts ─────────────────────────────────────── tidyverse_conflicts() ──\n## ✖ dplyr::filter() masks stats::filter()\n## ✖ dplyr::lag()    masks stats::lag()\n## ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n## Paths\ndata_dir              <- file.path(\"data/\")\nraw_data_dir          <- file.path(\"raw_data/\")\n## Load one sample?\nsample_path = file.path(raw_data_dir, \"GSM7473682_HC_a\")\nso <- LoadNanostring(sample_path,\n                     assay='RNA',\n                     fov=\"GSM7473682_HC_a\")\n\n\n# HOWEVER \n# This default method drops most of the metatdata in the seurat object.\n# e.g. what fov is each cell a member of? is missing.\n\n#so@meta.data\n#orig.ident nCount_RNA nFeature_RNA\n#1_1   SeuratProject        368          189\n#2_1   SeuratProject        810          286\n#3_1   SeuratProject        119           74\n\n# An alternative function is here;\n# In time, this should be fixed within seruat\n# See comments here\n#https://github.com/satijalab/seurat/discussions/9261\nsource(\"scripts/LoadNanostring_edited_function.R\")\nso$tissue_sample   <- \"HC_A\"\nso$group           <- \"HC\"\nso$condition       <- \"Healthy Controls\""},{"path":"input-data.html","id":"load-all-samples-from-raw-data","chapter":"6 Input Data","heading":"6.2.2 Load all samples from raw data","text":"Code example goes (run)","code":""},{"path":"input-data.html","id":"load-the-workshop-data","chapter":"6 Input Data","heading":"6.2.3 Load the workshop data","text":"dataset subset experimenal data - first 5 fov views , CD HC sample groups.","code":"\nso_raw <- readRDS(file.path(data_dir, \"GSE234713_CosMx_IBD_seurat_00_raw_subsampled.RDS\"))"},{"path":"qc.html","id":"qc","chapter":"7 QC","heading":"7 QC","text":"Basic QC plots + filtering (20min)(Negative probes using cosmx)","code":""},{"path":"basic-visualisation.html","id":"basic-visualisation","chapter":"8 Basic visualisation","heading":"8 Basic visualisation","text":"Plot tissue (10min)Plot gene expression (10min)","code":""},{"path":"reduce-dimensionality.html","id":"reduce-dimensionality","chapter":"9 Reduce dimensionality","heading":"9 Reduce dimensionality","text":"","code":""},{"path":"reduce-dimensionality.html","id":"normalisation","chapter":"9 Reduce dimensionality","heading":"9.1 Normalisation","text":"","code":"\n# Basic preprocessing\n# Split layers out again\n# https://satijalab.org/seurat/articles/seurat5_integration\nso <- split(so, f = so$orig.ident)\n\n# Run through preprocessing\nso <- NormalizeData(so)## Normalizing layer: counts.GSM7473682_HC_a## Normalizing layer: counts.GSM7473683_HC_b## Normalizing layer: counts.GSM7473684_HC_c## Normalizing layer: counts.GSM7473688_CD_a## Normalizing layer: counts.GSM7473689_CD_b## Normalizing layer: counts.GSM7473690_CD_c"},{"path":"reduce-dimensionality.html","id":"find-highly-variable-genes.","chapter":"9 Reduce dimensionality","heading":"9.2 Find Highly variable genes.","text":"Explain: point represents gene, red = HVGs selectedBuild UMAPAnd plot - DimPlot plot UMAP found, ‘umap’ (‘pca’) can explictly specified.Now time plot everything;Categorical factors ‘DimPlot’Including genes - can pass severable time ","code":"\nso <- FindVariableFeatures(so, nfeatures = 200)## Finding variable features for layer counts.GSM7473682_HC_a## Finding variable features for layer counts.GSM7473683_HC_b## Finding variable features for layer counts.GSM7473684_HC_c## Finding variable features for layer counts.GSM7473688_CD_a## Finding variable features for layer counts.GSM7473689_CD_b## Finding variable features for layer counts.GSM7473690_CD_c\nVariableFeaturePlot(so)\nso <- ScaleData(so) # Just 200 variable features## Centering and scaling data matrix\nso <- RunPCA(so, features = VariableFeatures(so))## PC_ 1 \n## Positive:  PIGR, EPCAM, KRT8, KRT19, CLDN4, FCGBP, LGALS3, S100A6, CD24, AGR2 \n##     KRT20, KRT17, ITLN1, CEACAM1, SFN, SOX9, PLAC8, EZR, CEACAM6, B3GNT7 \n##     MT1X, AQP8, S100P, OLFM4, EPHA2, LEFTY1, FFAR4, DDC, TNFRSF11A, RNF43 \n## Negative:  CD74, IGHG1, HLA-DRB1, IGHG2, HLA-DRA, HLA-DPA1, IGKC, LYZ, HLA-DQA1, C1QC \n##     COL1A1, C1QA, C1QB, HLA-DPB1, HLA-DRB5, COL3A1, PTGDS, HLA-DQB1, CXCR4, CIITA \n##     CD163, COL1A2, COL6A2, GPNMB, IGHM, COL6A3, CD37, COL6A1, IGFBP7, MZB1 \n## PC_ 2 \n## Positive:  JCHAIN, IGHA1, MZB1, DERL3, IGKC, XBP1, IGHG1, IGHG2, IRF4, TNFRSF13B \n##     BMP6, IGHM, TPSB2, CXCL14, CD37, CSF2, CD5L, TCL1A, CPA3, IL7R \n##     APOD, MS4A1, CXCR4, ADAMDEC1, PECAM1, HBB, CCL3, CD52, TEK, IL1RL1 \n## Negative:  S100A6, MT2A, THBS1, LGALS3, SAT1, HLA-DRA, GSN, C1QC, MT1X, LYZ \n##     CD163, C1QB, C1QA, COL1A1, COL3A1, HLA-DPB1, HLA-DRB1, CD14, HLA-DPA1, COL1A2 \n##     CHI3L1, C11orf96, EPCAM, COL6A3, GPNMB, CLDN4, COL6A1, SERPINA1, SELENOP, COL6A2 \n## PC_ 3 \n## Positive:  CD74, HLA-DRB1, LYZ, HLA-DRA, HLA-DQA1, HLA-DPA1, HLA-DRB5, IGHG2, IGHG1, HLA-DQB1 \n##     C1QB, C1QC, CIITA, IGKC, C1QA, HLA-DPB1, SAT1, EZR, CD37, CD163 \n##     IGHA1, CXCR4, ITGAX, MMP9, CD14, CD52, XBP1, CXCL9, IGHM, SERPINA1 \n## Negative:  COL6A2, COL6A1, TPM2, TAGLN, MYH11, ACTA2, FN1, C11orf96, COL1A1, ACTG2 \n##     COL3A1, MYL9, IGFBP7, COL6A3, COL1A2, DCN, COL4A1, IGFBP5, MEG3, THBS1 \n##     SPARCL1, ITGA5, COL14A1, LUM, MGP, GSN, PDGFRB, PDGFRA, CLU, CRYAB \n## PC_ 4 \n## Positive:  IGHA1, IGKC, JCHAIN, MZB1, XBP1, DERL3, IGHG2, IGHG1, COL3A1, COL1A1 \n##     COL1A2, COL6A3, PDGFRA, CXCL14, LUM, LGALS3, MT2A, MEG3, MMP19, CDKN1A \n##     KRT20, CHI3L1, VEGFA, CFD, THBS1, MT1X, CD24, AQP8, KRT19, BMP6 \n## Negative:  CCL21, CXCR4, CD52, IL7R, FYB1, ARHGDIB, CCL19, MYH11, CD37, ACTA2 \n##     ACTG2, HLA-DPB1, CIITA, MS4A1, IGFBP5, IGHD, DUSP2, CD74, TPM2, HLA-DRA \n##     SPARCL1, TAGLN, KLRK1, CD83, CLU, CCL5, ITGAX, MMP9, HLA-DPA1, CTLA4 \n## PC_ 5 \n## Positive:  ITLN1, OLFM4, AGR2, LEFTY1, SOX9, HMGB2, H4C3, EPHB3, IL17RB, DDC \n##     RNF43, XBP1, TNFRSF11A, SOX4, EZH2, CXCL3, B3GNT7, MKI67, SERPINA1, TOP2A \n##     FCGBP, PIGR, LIF, CXCL2, CHGA, IL20RA, CXCL1, GCG, VEGFA, DERL3 \n## Negative:  KRT20, CEACAM1, SELENOP, AQP8, PLAC8, CEACAM6, CDKN1A, DST, EZR, KRT17 \n##     GSN, KRT19, SFN, FOS, EPHA2, LAMA3, CLDN4, CXCR4, HLA-DRA, HLA-DPA1 \n##     MAF, HLA-DPB1, IL7R, CCL21, LGALS3, PTGDS, CCL19, HLA-DQA1, C1QC, MT2A\nDimPlot(so, reduction = \"pca\", group.by='tissue_sample')\nDimPlot(so, reduction = \"pca\", group.by='tissue_sample', dims=c(3,4))\nElbowPlot(so)\nnum_dims <- 15\nso <- RunUMAP(so, dims=1:num_dims)## Warning: The default method for RunUMAP has changed from calling Python UMAP via reticulate to the R-native UWOT using the cosine metric\n## To use Python UMAP via reticulate, set umap.method to 'umap-learn' and metric to 'correlation'\n## This message will be shown once per session## 06:19:26 UMAP embedding parameters a = 0.9922 b = 1.112## 06:19:26 Read 50662 rows and found 15 numeric columns## 06:19:26 Using Annoy for neighbor search, n_neighbors = 30## 06:19:26 Building Annoy index with metric = cosine, n_trees = 50## 0%   10   20   30   40   50   60   70   80   90   100%## [----|----|----|----|----|----|----|----|----|----|## **************************************************|\n## 06:19:34 Writing NN index file to temp file /tmp/RtmpucFKjs/file17153e3745bd72\n## 06:19:34 Searching Annoy index using 1 thread, search_k = 3000\n## 06:20:00 Annoy recall = 100%\n## 06:20:02 Commencing smooth kNN distance calibration using 1 thread with target n_neighbors = 30\n## 06:20:06 Initializing from normalized Laplacian + noise (using RSpectra)\n## 06:20:08 Commencing optimization for 200 epochs, with 2235096 positive edges\n## 06:20:08 Using rng type: pcg\n## 06:20:32 Optimization finished\nDimPlot(so, group.by='tissue_sample') # If umap exists, umap.\n# DimPlot(so, group.by='tissue_sample', reduction = 'umap')  # ths same\nDimPlot(so, group.by='tissue_sample')\nDimPlot(so, group.by='condition')\nDimPlot(so, group.by='tissue_sample', split.by='condition')\nFeaturePlot(so, 'nCount_RNA') ## Warning: The `slot` argument of `FetchData()` is deprecated as of SeuratObject 5.0.0.\n## ℹ Please use the `layer` argument instead.\n## ℹ The deprecated feature was likely used in the Seurat package.\n##   Please report the issue at <https://github.com/satijalab/seurat/issues>.\n## This warning is displayed once every 8 hours.\n## Call `lifecycle::last_lifecycle_warnings()` to see where this warning was\n## generated.\nFeaturePlot(so, 'nCount_negprobes') \nFeaturePlot(so, 'pc_neg') \nFeaturePlot(so, c('CD74','PIGR','IGHA1','VWF'), ncol=2 )"},{"path":"batch-correction.html","id":"batch-correction","chapter":"10 Batch Correction","heading":"10 Batch Correction","text":"regions UMAP sees separation byWe can apply batch correctionThis step takes time run. run code ;Instead, load version object theis data.","code":"\nDimPlot(so, group.by='tissue_sample')\nso <- FindNeighbors(so, dims = 1:num_dims)## Computing nearest neighbor graph## Computing SNN\nso <- FindClusters(so)  ## Modularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck\n## \n## Number of nodes: 50662\n## Number of edges: 1265113\n## \n## Running Louvain algorithm...\n## Maximum modularity in 10 random starts: 0.8339\n## Number of communities: 15\n## Elapsed time: 32 seconds\nDimPlot(so, group.by='seurat_clusters')\nso <- FindClusters(so, resolution = 0.2)  ## Modularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck\n## \n## Number of nodes: 50662\n## Number of edges: 1265113\n## \n## Running Louvain algorithm...\n## Maximum modularity in 10 random starts: 0.9068\n## Number of communities: 6\n## Elapsed time: 35 seconds\nDimPlot(so, group.by='seurat_clusters')\ntable(so$orig.ident, so$seurat_clusters)##                  \n##                      0    1    2    3    4    5\n##   GSM7473682_HC_a 1519 1980 1556  367 1159  162\n##   GSM7473683_HC_b 1814 5772 3102  612 2337  136\n##   GSM7473684_HC_c 1099 2132 1260  310  117   54\n##   GSM7473688_CD_a  876 1277 1587  156   84   30\n##   GSM7473689_CD_b 3961    0 1047 6464  852  110\n##   GSM7473690_CD_c 5284 1577  902  297  512  158  # https://satijalab.org/seurat/articles/seurat5_integration\n  # Slow?\n  so <- IntegrateLayers(so, method = HarmonyIntegration, orig.reduction = \"pca\", new.reduction = \"harmony\")\n  so <- RunUMAP(so, dims=1:num_dims, reduction = 'harmony')\n\n  DimPlot(so, group.by='tissue_sample')\n\n  so <- FindNeighbors(so, reduction = \"harmony\", dims = 1:num_dims)\n  so <- FindClusters(so, resolution = 0.2)\n  # don't talk about optimisation of clusters, point people at single cell resources.\n}\nlibrary(here)## here() starts at /home/s.williams/projects/intro-spatial-transcriptomics-workshop\nseurat_file_01_preprocessed_subset <- here(\"data\", \"GSE234713_CosMx_IBD_seurat_01_preprocessed_subsampled.RDS\")\nso <- readRDS(seurat_file_01_preprocessed_subset)\nDimPlot(so, group.by='seurat_clusters')\nDimPlot(so, group.by='orig.ident')"},{"path":"clustering.html","id":"clustering","chapter":"11 Clustering","heading":"11 Clustering","text":"Dimensional reduction + clustering. (20min)PCA + UMAP can take explanation time. Try keep brief. Link info.Plot clusters tissue (10min)discuss:cell type determinationcall typingCell type annotation","code":""},{"path":"analysis-example.html","id":"analysis-example","chapter":"12 Analysis example","heading":"12 Analysis example","text":"Differential expression exampleDifferential expression exampleInfo testsInfo testsLink directly?\nhttps://swbioinf.github.io/spatialsnippets/e_DEPseudobulk_insitu.htmlNB: ’ll probably update material include spatial plots.","code":""},{"path":"next-steps.html","id":"next-steps","chapter":"13 Next steps","heading":"13 Next steps","text":"Wrap (10)\npreprocessed data, now run tests/analysis => spatial sampler resource.Q&(whatever)Extra:\nAboutSegmentation? Use defaults.Questions addressHow combine multiple samplesHow annotate multiple samples one slide (wish knew)X","code":""},{"path":"resources.html","id":"resources","chapter":"14 Resources","heading":"14 Resources","text":"Links various useful resources.Seurat spatial vignette (imaging-based ) : load plot spatial data seurat - covers different technologies.Voyager Documentaion: bioconductor package spatial analyses, centered around SpatialFeatureExperiment objectsSCverse: ecosystem analyseing single cell spatial single cell data python.Spatial Sampler : Worked examples code snippets run various statitical tests single cell spatial data.","code":""},{"path":"references.html","id":"references","chapter":"References","heading":"References","text":"","code":""}]

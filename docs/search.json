[{"path":"index.html","id":"overview","chapter":"1 Overview","heading":"1 Overview","text":"Overview spatial transcriptomics workshop.","code":""},{"path":"intro.html","id":"intro","chapter":"2 Introduction","heading":"2 Introduction","text":"Intro/Welcome 10-15 minsCheck everyone can login servers (10m)Link intro slides.Workshop style - interactiveSchedule","code":""},{"path":"background.html","id":"background","chapter":"3 Background","heading":"3 Background","text":"Background (Conceptual) 25 mins (aim reduce)high-level overview spatial fits existing omics technologiesSimilarities differences single cell, bulk, visiumBasic techs\nComparison techs, ones use, ?\nComparison techs, ones use, ?Questions like know noob:\n’s cost-effective tech?\none used samples conditions interest?\nConsiderations study design, .e. many replicates\n’s cost-effective tech?one used samples conditions interest?Considerations study design, .e. many replicatesWhich tools packages use\nR vs. Python\nSfe (biconductor vs seurat)\nR vs. PythonSfe (biconductor vs seurat)","code":""},{"path":"exampleexperiment.html","id":"exampleexperiment","chapter":"4 Example Experiment","heading":"4 Example Experiment","text":"Background (Workshop) 15 mins (aim reduce)E.g. one cosmx studies https://swbioinf.github.io/spatialsnippets/index_data.html\nLikely need subsample data?\nLikely need subsample data?data isReplicate key analyses plots, explaining “X instead Y” throughout.NotesIf reproduce something ’ll figure 1d UMAP celltypes, maybe celltype proportions (time permits.). Maybe Figure 1b simplified - heatmap marker genes.=======Today’s workshop use data paper Macrophage neutrophil heterogeneity single-cell spatial resolution human inflammatory bowel disease (Garrido-Trigo et al. 2023).study explored macrophage neutorphil subtypes localisation across immflammatory bowel disease using combination single cell RNAseq (10X), spatial RNAseq (cosmx). authors made raw annotated data available (code). also browseable interface : https://servidor2-ciberehd.upc.es/external/garrido/app/study included 9 cosmx slides colonic biopsies3x HC - Healthy controls3x UC - Ulcerative colitis3x CD - Chrones’s diseaseWe basic processing 9 samples - QC, clustering visualisation.","code":""},{"path":"aims.html","id":"aims","chapter":"5 Aims for today","heading":"5 Aims for today","text":"Start backwards - plots makeOften difficult understand point tutorial start dataIdentify minimal end--end analysis/analysesSpatial new field - lot new tools development","code":""},{"path":"Data.html","id":"Data","chapter":"6 Input Data","heading":"6 Input Data","text":"data look like get ? Examine raw data.Explain e.g. cosmx detail, refer similarities e.g. xeniumLoad data objectBrief explanation different data structuresSample annotation: Applying sample names individual slides. Mention difficulty multiple samples per slide (can recommend approach?)=====","code":""},{"path":"Data.html","id":"the-raw-data","chapter":"6 Input Data","heading":"6.1 The raw data","text":"cosmx SMI slide (like experiment).Flat files : need processing. Typically directory flat files read whole, don’t need worry much. note images .\nSLIDE-polygons.csv.gz : Cell borders\nSLIDE_exprMat_file.csv.gz : Counts genes per cell (Counts matrix)\nSLIDE_fov_positions_file.csv.gz : Location FOVs slide\nSLIDE_metadata_file.csv.gz : Cell level QC metadata\nSLIDE_tx_file.csv.gz : Location individual transcripts.\nSLIDE-polygons.csv.gz : Cell bordersSLIDE_exprMat_file.csv.gz : Counts genes per cell (Counts matrix)SLIDE_fov_positions_file.csv.gz : Location FOVs slideSLIDE_metadata_file.csv.gz : Cell level QC metadataSLIDE_tx_file.csv.gz : Location individual transcripts.Raw files : Giant ugly directory lots files including microscopy images.\nRawFiles/SLIDE/RUN_CODE/CellStatsDir/Morphology2D : Location images\nhttps://github.com/Nanostring-Biostats/CosMxDACustomModules/blob/main/Export/CosMxDAExportSetup.docx\nRawFiles/SLIDE/RUN_CODE/CellStatsDir/Morphology2D : Location imageshttps://github.com/Nanostring-Biostats/CosMxDACustomModules/blob/main/Export/CosMxDAExportSetup.docxFor Xenium slide just one typical output directory; discuss formats section data archiving, , software tools take directory whole.","code":""},{"path":"Data.html","id":"loading-the-data","chapter":"6 Input Data","heading":"6.2 Loading the data","text":"","code":""},{"path":"Data.html","id":"load-one-sample-from-raw-data","chapter":"6 Input Data","heading":"6.2.1 Load one sample from raw data","text":"Load libraries, pathsThe code load one sample follows.sample annotated experimental details. particular\nstudy one sample per slide (easy!), typically .","code":"\nlibrary(Seurat)## Loading required package: SeuratObject## Loading required package: sp## \n## Attaching package: 'SeuratObject'## The following objects are masked from 'package:base':\n## \n##     intersect, t\nlibrary(SeuratObject)\nlibrary(tidyverse)## ── Attaching core tidyverse packages ────────────────────── tidyverse 2.0.0 ──\n## ✔ dplyr     1.1.4     ✔ readr     2.1.5\n## ✔ forcats   1.0.0     ✔ stringr   1.5.1\n## ✔ ggplot2   3.5.2     ✔ tibble    3.3.0\n## ✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n## ✔ purrr     1.1.0## ── Conflicts ──────────────────────────────────────── tidyverse_conflicts() ──\n## ✖ dplyr::filter() masks stats::filter()\n## ✖ dplyr::lag()    masks stats::lag()\n## ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\nlibrary(here)## here() starts at /home/s.williams/projects/intro-spatial-transcriptomics-workshop\n## Paths\ndata_dir              <- file.path(\"data/\")\nraw_data_dir          <- file.path(\"raw_data/\")\n## Load one sample?\nsample_path = file.path(raw_data_dir, \"GSM7473682_HC_a\")\nso <- LoadNanostring(sample_path,\n                     assay='RNA',\n                     fov=\"GSM7473682_HC_a\")\n\n\n# HOWEVER \n# This default method drops most of the metatdata in the seurat object.\n# e.g. what fov is each cell a member of? is missing.\n\n#so@meta.data\n#orig.ident nCount_RNA nFeature_RNA\n#1_1   SeuratProject        368          189\n#2_1   SeuratProject        810          286\n#3_1   SeuratProject        119           74\n\n# An alternative function is here;\n# In time, this should be fixed within seruat\n# See comments here\n#https://github.com/satijalab/seurat/discussions/9261\nsource(\"scripts/LoadNanostring_edited_function.R\")\nso$tissue_sample   <- \"HC_A\"\nso$group           <- \"HC\"\nso$condition       <- \"Healthy Controls\""},{"path":"Data.html","id":"load-all-samples-from-raw-data","chapter":"6 Input Data","heading":"6.2.2 Load all samples from raw data","text":"Code example goes (run)","code":""},{"path":"Data.html","id":"load-the-workshop-data","chapter":"6 Input Data","heading":"6.2.3 Load the workshop data","text":"dataset subset experimenal data - first 5 fov views , CD HC sample groups.","code":"\nso_raw <- readRDS(file.path(data_dir, \"GSE234713_CosMx_IBD_seurat_00_raw_subsampled.RDS\"))"},{"path":"qc.html","id":"qc","chapter":"7 QC","heading":"7 QC","text":"Basic QC plots + filtering (20min)(Negative probes using cosmx)","code":""},{"path":"basic-visualisation.html","id":"basic-visualisation","chapter":"8 Basic visualisation","heading":"8 Basic visualisation","text":"Plot tissue (10min)Plot gene expression (10min)","code":""},{"path":"ReducedDimensionality.html","id":"ReducedDimensionality","chapter":"9 Reduce dimensionality - UMAPs","heading":"9 Reduce dimensionality - UMAPs","text":"steps number-crunching get generating nice UMAP representation data.steps needed?Normalisation Different cells different total target counts. Normalisation allows comparable.Identification highly variable features (feature selection) Identifying variable features allows retaining real biological variability data reduce noise data.Scaling data: Highly expressed genes can overpower signal less expressed genes equal importance. Within cell assumption underlying RNA content constant.Dimensionality reduction (PCA): Imagine gene represents dimension - axis plot. plot expression two genes simple scatter plot. genome gene panel 100s 1000s genes - collate information genes way allows visualise 2 dimensional image. dimensionality reduction comes , calculate meta-features contains combinations variation different genes. hundreds genes, end 10s meta-featuresRun non-linear dimensional reduction (UMAP): Finally, make UMAP plot arranges cells logical easy visualise way. Note tSNE algorithm (makes tSNE plots) older alternative method UMAP.","code":""},{"path":"ReducedDimensionality.html","id":"normalisation","chapter":"9 Reduce dimensionality - UMAPs","heading":"9.1 Normalisation","text":"default, use ‘LogNormalize’ method seurat - described NormaliseData function help:“LogNormalize: Feature counts cell divided total counts cell multiplied scale.factor. natural-log transformed using log1’”-depth discussion normalisation spatial datasets see Atta et al (2024) aware spatial-aware methods SpaNorm","code":"\nso <- NormalizeData(so)"},{"path":"ReducedDimensionality.html","id":"find-highly-variable-genes.","chapter":"9 Reduce dimensionality - UMAPs","heading":"9.2 Find Highly variable genes.","text":"genes vary cell types/states sample?don’t yet know anything celltypes stats, can make assumption genes high variance probably reflecting biological state. contrast ‘housekeeper’ gene even expression across cell types won’t helpful grouping cells.data split sample, seurat identify variable genes within sample combine information. seurat5 documentation layers:“Note since data split layers, normalization variable feature identification performed batch independently (consensus set variable features automatically identified).”point represents one gene - red ones top 200 ‘highly variable genes’ HVGs. firm rule many HVGs want. whole transcriptome 2000, 1000 genes 200. exact number doesn’t matter much; long capture genes main group low variance genes.can list genes:","code":"\nso <- FindVariableFeatures(so, nfeatures = 200)\nVariableFeaturePlot(so)\nhead(VariableFeatures(so))## [1] \"IGHM\"   \"IGHG1\"  \"TPSB2\"  \"IGHG2\"  \"JCHAIN\" \"TPSAB1\""},{"path":"ReducedDimensionality.html","id":"scale-data","chapter":"9 Reduce dimensionality - UMAPs","heading":"9.3 Scale data","text":"default, scaleData function scale HVGs.Note presence single ‘scale.data’ layer.","code":"\nso <- ScaleData(so) # Just 200 variable features\nso## An object of class Seurat \n## 999 features across 56853 samples within 2 assays \n## Active assay: RNA (980 features, 200 variable features)\n##  13 layers present: counts.GSM7473682.HC.a, counts.GSM7473683.HC.b, counts.GSM7473684.HC.c, counts.GSM7473688.CD.a, counts.GSM7473689.CD.b, counts.GSM7473690.CD.c, data.GSM7473682.HC.a, data.GSM7473683.HC.b, data.GSM7473684.HC.c, data.GSM7473688.CD.a, data.GSM7473689.CD.b, data.GSM7473690.CD.c, scale.data\n##  1 other assay present: negprobes\n##  6 spatial fields of view present: GSM7473682.HC.a GSM7473683.HC.b GSM7473684.HC.c GSM7473688.CD.a GSM7473689.CD.b GSM7473690.CD.c"},{"path":"ReducedDimensionality.html","id":"pca","chapter":"9 Reduce dimensionality - UMAPs","heading":"9.4 PCA","text":"Now run PCA (Principal Component Analysis).Now ‘pca’ reduction listed object.peeking seurat object, can see value PC (Principal Component) cell.contexts (e.g. Bulk RNAseq experiments), PCs can enough group explore difference samples. e.g. See plot DEseq2 documentation.can try , sheer number cells diversity among , rarely works spatial single cell datasets - simply blob.PC1 vs PC2.","code":"\nso <- RunPCA(so, features = VariableFeatures(so))\nso## An object of class Seurat \n## 999 features across 56853 samples within 2 assays \n## Active assay: RNA (980 features, 200 variable features)\n##  13 layers present: counts.GSM7473682.HC.a, counts.GSM7473683.HC.b, counts.GSM7473684.HC.c, counts.GSM7473688.CD.a, counts.GSM7473689.CD.b, counts.GSM7473690.CD.c, data.GSM7473682.HC.a, data.GSM7473683.HC.b, data.GSM7473684.HC.c, data.GSM7473688.CD.a, data.GSM7473689.CD.b, data.GSM7473690.CD.c, scale.data\n##  1 other assay present: negprobes\n##  1 dimensional reduction calculated: pca\n##  6 spatial fields of view present: GSM7473682.HC.a GSM7473683.HC.b GSM7473684.HC.c GSM7473688.CD.a GSM7473689.CD.b GSM7473690.CD.c\nso@reductions$pca@cell.embeddings[1:10,1:5]##                PC_1       PC_2       PC_3       PC_4      PC_5\n## HC_a_1_1  -6.148807 -2.0908949 -0.4825868  0.4346447 -2.251673\n## HC_a_2_1  -7.765302 -6.2518662  1.8308806  0.9827992 -4.352795\n## HC_a_3_1  -4.965210  0.4225925  0.2818806 -1.0218902 -4.467894\n## HC_a_4_1  -3.837060  1.6575017  0.4302138 -0.1013677 -2.870886\n## HC_a_5_1  -6.549506 -3.6873409 -0.1546158  0.5736327 -4.347325\n## HC_a_6_1  -6.059822 -7.1218463  1.3389979  0.2461749 -3.405665\n## HC_a_7_1  -5.609824 -2.5791504  0.4295388  1.1227985 -4.756035\n## HC_a_8_1  -7.076313 -4.6975718 -0.3541234  2.3167606 -3.176212\n## HC_a_9_1  -7.019115 -3.1431556  0.3734391  0.2201073 -4.555789\n## HC_a_10_1 -6.518847 -3.6272531 -0.1846131  2.5870675 -5.700536\nDimPlot(so, reduction = \"pca\", group.by='tissue_sample')"},{"path":"ReducedDimensionality.html","id":"umap","chapter":"9 Reduce dimensionality - UMAPs","heading":"9.5 UMAP","text":"UMAP (Uniform Manifold Approximation Projection) method summarising\nmultiple principal components fewer dimensions visualisation - generally just x y.UMAP :Non-linear: Distances cells PCA linear, whereas UMAP non-linear. .e. larger distance two cells necessarily mean greater transcriptional difference.Non-deterministic: data produce different layout, though generally functions use set random numbers avoid . Even - removing just one cell shuffle result, nearly impossible task reproduce existing UMAP! General trends remain stable.interested exploring UMAP works , Understanding UMAP page excellent interactive resource. -depth discussion can sometimes misinterpreted see Biologists, stop putting UMAP plots papers.build UMAP need decide many principal components want summarise. ‘elbow plot’ shows proportion variance explained PC - starting PC1 - always explains . Eventually variance explained drops base level - extra PCs aren’t adding much .general rule thumb pick standard variation levels plot - ‘elbow’. harm rounding . Typically 10-20, higher complex datasets.choose 15.build UMAP first 15 PCs.plot - coloured tissue sample.","code":"\nElbowPlot(so)\nnum_dims <- 15\nso <- RunUMAP(so, dims=1:num_dims)## Warning: The default method for RunUMAP has changed from calling Python UMAP via reticulate to the R-native UWOT using the cosine metric\n## To use Python UMAP via reticulate, set umap.method to 'umap-learn' and metric to 'correlation'\n## This message will be shown once per session\n# you can specify reduction='umap' explicitly\n# DimPlot(so, group.by='tissue_sample', reduction = 'umap') \n# But by default, if a umap exists in the object, Dimplot will plot it.\nDimPlot(so, group.by='tissue_sample') "},{"path":"ReducedDimensionality.html","id":"using-umap-to-visualise-your-data","chapter":"9 Reduce dimensionality - UMAPs","heading":"9.6 Using UMAP to visualise your data","text":"Now time plot interesting looking metadata UMAP.QC : Slide, total RNA, negative probes, slide, batchExperimental: Groups, samples, timepoint, treatment, mouseWe want identify trends biases technical experimentally interesting.View categorical factors ‘DimPlot’, continuous ‘FeaturePlot’. split.parameter quite useful separate certain variables, like experimental group.little separation condition - appears due individual (’ll address next).can see negative probe counts line total counts. higher counts concentrated certain regions UMAP.overall % negative probes random.Likewise, can also helpful plot genes point. can provide list.","code":"\nDimPlot(so, group.by='tissue_sample')\nDimPlot(so, group.by='condition')\nDimPlot(so, group.by='tissue_sample', split.by='condition')\nFeaturePlot(so, 'nCount_RNA') \nFeaturePlot(so, 'nCount_negprobes') \nso$pc_neg <- so$nCount_negprobes / (so$nCount_negprobes + so$nCount_RNA) * 100\nFeaturePlot(so, 'pc_neg') \nFeaturePlot(so, c('CD74','PIGR','IGHA1','VWF'), ncol=2 )"},{"path":"BatchCorrection.html","id":"BatchCorrection","chapter":"10 Batch Correction","heading":"10 Batch Correction","text":"generally want compare analyse matched cell types (cell states) across different experimental groups. transcriptional differences individuals batch effects preparation slide can introduce unwanted variation makes hard see cell type differences. can address batch correction integration methods.good description integration methods choose , Single cell best practicies, integration, review batch correction methods single cell data Antonsson Melsted (2025).","code":""},{"path":"BatchCorrection.html","id":"do-we-need-batch-correction","chapter":"10 Batch Correction","heading":"10.1 Do we need batch correction?","text":"regions UMAP can see separation sample. common spatial data, especially working human data.example isn’t bad, purposes work, go process batch correction.course - separation aligns biological groups interest, correction may appropriate; e.g. knockout can mean particular celltype never forms, region wild-type samples. Consider ’s going experiment!Additionally, batch effects can occur different variables. experiment one sample per slide, batch effect seen level. multiple samples per slide, need identify batch effect slide sample () level, split data level split() function. data already split sample/slide - can continue .becomes obvious split plot sample well;continue cell clustering analysis point, might find build clusters around individual samples.","code":"\nDimPlot(so, group.by='tissue_sample')\nDimPlot(so, group.by='tissue_sample', split.by = 'tissue_sample', ncol = 3)"},{"path":"BatchCorrection.html","id":"running-batch-correction","chapter":"10 Batch Correction","heading":"10.2 Running batch correction","text":"can apply batch correction integration method adjust principal components de-emphasise -sample effect. Seurat implements several methods, full ‘Introduction scRNA-seq integration’ vignette. use ‘harmony’ method, Korsunsky et al 2019.worth noting methods can applied combine data multiple experiments (e.g. public data), even technologies!can one computationally intensive steps analysis. can take hours run use many Gb RAM, scaling size experiment. small subset, take minute two.Looking summary seurat object see 3x dimensional reductions:pca : original principal components, batch correction.harmony : harmony output, values like PCA, adjusted batch correction.umap : new umap based harmony. overwrote old UMAP.plotting new UMAP, samples move overlayed. better visualisation, means clusters biased samples.","code":"\n# Run harmony \nso <- IntegrateLayers(so, method = HarmonyIntegration, orig.reduction = \"pca\", new.reduction = \"harmony\")## The `features` argument is ignored by `HarmonyIntegration`.\n## Transposing data matrix\n## \n## Using automatic lambda estimation\n## \n## Initializing state using k-means centroids initialization\n## \n## This message is displayed once per session.## Warning: Quick-TRANSfer stage steps exceeded maximum (= 2842650)## Harmony 1/10\n## Harmony 2/10\n## Harmony converged after 2 iterations\n# Make a new UMAP, using the harmony values.\nso <- RunUMAP(so, dims=1:num_dims, reduction = 'harmony')## 23:42:12 UMAP embedding parameters a = 0.9922 b = 1.112\n## 23:42:12 Read 56853 rows and found 15 numeric columns\n## 23:42:12 Using Annoy for neighbor search, n_neighbors = 30\n## 23:42:12 Building Annoy index with metric = cosine, n_trees = 50\n## 0%   10   20   30   40   50   60   70   80   90   100%\n## [----|----|----|----|----|----|----|----|----|----|\n## **************************************************|\n## 23:42:20 Writing NN index file to temp file /tmp/Rtmpl3XQhL/file22c0714c88fb1a\n## 23:42:20 Searching Annoy index using 1 thread, search_k = 3000\n## 23:42:56 Annoy recall = 100%\n## 23:42:57 Commencing smooth kNN distance calibration using 1 thread with target n_neighbors = 30\n## 23:43:02 Initializing from normalized Laplacian + noise (using RSpectra)\n## 23:43:05 Commencing optimization for 200 epochs, with 2511544 positive edges\n## 23:43:05 Using rng type: pcg\n## 23:43:35 Optimization finished\nDimPlot(so, group.by='tissue_sample')\nso## An object of class Seurat \n## 999 features across 56853 samples within 2 assays \n## Active assay: RNA (980 features, 200 variable features)\n##  13 layers present: counts.GSM7473682.HC.a, counts.GSM7473683.HC.b, counts.GSM7473684.HC.c, counts.GSM7473688.CD.a, counts.GSM7473689.CD.b, counts.GSM7473690.CD.c, data.GSM7473682.HC.a, data.GSM7473683.HC.b, data.GSM7473684.HC.c, data.GSM7473688.CD.a, data.GSM7473689.CD.b, data.GSM7473690.CD.c, scale.data\n##  1 other assay present: negprobes\n##  3 dimensional reductions calculated: pca, umap, harmony\n##  6 spatial fields of view present: GSM7473682.HC.a GSM7473683.HC.b GSM7473684.HC.c GSM7473688.CD.a GSM7473689.CD.b GSM7473690.CD.c\nDimPlot(so, group.by='orig.ident')\nDimPlot(so, group.by='tissue_sample', split.by = 'tissue_sample', ncol = 3)"},{"path":"clustering.html","id":"clustering","chapter":"11 Clustering","heading":"11 Clustering","text":"","code":""},{"path":"clustering.html","id":"generate-clusters","chapter":"11 Clustering","heading":"11.1 Generate Clusters","text":"generate clusters, first build ‘neighbourhood’ graph. network graph, links cells basis transcriptional similarity (‘neighbours’). something looking directly, simply stored inside object, important input downstream steps like clustering.Forget run ’ll generate error.Note need specify ‘harmony’ reduction, else default ‘pca’. Just like UMAP, want clusters represent different cell types states, differences individuals.Now clustering can simple running ‘FindClusters’.rest workshop, ’ll use stick resolution 0.8 - actually default.real life, choosing clustering resolution can cyclic process cell type labelling. ‘correct’ level clustering one lets answer biological questions interested . broad ’ll heterogeneity clusters, specific ’ll somewhat arbitrary clusters cells test anything. may need use different levels clustering different analyses, choose make sub-clusters one particular celltype interest.clustree package can useful tool evaluate different levels clustering. example use context single cell transcriptomics.","code":"\nso <- FindNeighbors(so, reduction = \"harmony\", dims = 1:15)\nso <- FindClusters(so)  ## Modularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck\n## \n## Number of nodes: 56853\n## Number of edges: 1324833\n## \n## Running Louvain algorithm...\n## Maximum modularity in 10 random starts: 0.8216\n## Number of communities: 11\n## Elapsed time: 35 seconds\nDimPlot(so, group.by='seurat_clusters')\nso <- FindClusters(so, resolution = 0.8)  \nDimPlot(so, group.by='seurat_clusters')"},{"path":"ClusterLabelling.html","id":"ClusterLabelling","chapter":"12 Clustering Labeling","heading":"12 Clustering Labeling","text":"Classifying cells meaningful celltypes (cell states) time consuming, extremely important, part spatial analysis.may involve pulling together multiple lines evidence assign celltype labels cluster labels. approaches outlined :","code":""},{"path":"ClusterLabelling.html","id":"cluster-markers","chapter":"12 Clustering Labeling","heading":"12.1 Cluster Markers","text":"Considering clusters - lets find meaningful labels 1-10! genes expresses specifically clusters?‘FindAllMarkers’ function runs differential expression test see genes expressed differently celltype rest experiment. ‘.pos’ parameter useful report genes enriched (absent) cluster.Now list ‘marker’ genes. ’re markers sense canonical celltype markers - ’re just defined data.Look p-values! ’re extremely significant cell treated replicate (samples ignored).can filter fold-change (avg_log2FC) expression emphasise interesting larger change (even small difference can significant, useful determining cell types).human protein atlas useful site look single cell RNA expression given gene; e.g. CD37A dot plot convenient way summarise top distinct genes. can let read obvious celltypes see similarities clusters.can get information form marker lists dropping tool like enrichr considering cell type enrichment.\nNB: enrichR also R package, done programaticallyACTIVITY Choose cluster, pull top genes. Try enrichR > Cell Types. ? similar cluster? trust results?","code":"\nDimPlot(so, group.by='seurat_clusters')\n# Need to join the layers back again for this.\nso <- JoinLayers(so)\nmarker_table <- FindAllMarkers(so, group.by='seurat_clusters', only.pos=TRUE)\nDT::datatable(marker_table)\n# Get top 3 genes per cluster, with log FC > 1\nmarker_table_top <- marker_table %>%\n    group_by(cluster) %>%\n    dplyr::filter(avg_log2FC > 1, p_val_adj < 0.01) %>%\n    slice_head(n = 3)\n\nDotPlot(so, features = unique(marker_table_top$gene)) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))\ntop_marker_genes <- filter(marker_table, cluster == \"1\") %>% dplyr::filter(avg_log2FC > 1, p_val_adj < 0.01) %>% pull(gene) %>% head(20)\nprint(noquote(top_marker_genes))##  [1] JCHAIN    MZB1      DERL3     IGHA1     IGKC      XBP1      IGHG2    \n##  [8] IGHG1     DUSP5     IRF4      HSP90B1   CD38      ST6GAL1   BMP6     \n## [15] CSF2RB    TNFRSF13B IGHM"},{"path":"ClusterLabelling.html","id":"cell-typing-by-reference","chapter":"12 Clustering Labeling","heading":"12.2 Cell typing by reference","text":"number tools classify cells types basis similarity reference dataset. SingleR one tool.first need acquire reference dataset.typical reference public single cell datasets matched celltype trusted annotation. Look relevant paper provided GEO accession number similar. Note every study remembers publish annotations alongside raw data, authors might willing supply processed dataset ask.Alternatively, databases single cell datasets - see Human Cell Atlas CELLxGENE datasets. databases also let browse data online - excellent resource design cell annotation stages; can look gene expression particular celltype see matches seeing.tabula sapiens project (paper) built single cell atlas good number human tissues. data browse-able hosted cellXgene tabular sapiens collectionThese colon tissue samples, large intestine set listed (includes colon samples). Conveniently, can browse data online check suitable: via cellXgene interfaceBroad cell class looks pretty good. ’s colon included. individual level effect UMAP (stem cells limited 1-2 samples). ’ll work, ’s easy link download data.reference dataset pre-downloaded onto VMsIts .h5ad file, common pythonic analyses. Luckily can use schard package read R directly. seurat object.Instead builds SingleCellExperiment object - data format central bioconductor packages (fine, SingleR bioconductor !). SCE objects work quite similarly seurat objects, different notation - e.g. colData rowData access cell gene information respectively.gene names object ensemble gene IDs - let change gene symbols match data.following code makes celltype predictions using reference broad specific annotation levels. takes minutes run - even 8 cores.predictions look like ;Pull annotationAnd plot UMAPThe broad predictionsAnd detailed predictions. detailed celltypes difficult see - clearly labelled.delta next score gives distance called celltype, next likely. small difference indicate uncertainty - difficult classify cell, stray counts neighbouring cell cell types similar (especially detailed classification).nice line classifications clusters.","code":"\nlibrary(SingleR)# Do not run, but these were the linux shell commands to get and rename the data\nwget https://datasets.cellxgene.cziscience.com/82e3b450-6704-43de-8036-af1838daa7df.h5ad\nmv 82e3b450-6704-43de-8036-af1838daa7df.h5ad tabula_sapiens_large_intestine_82e3b450-6704-43de-8036-af1838daa7df.h5ad\nlibrary(schard)\nts_largeintestine_h5ad <- file.path(\"data/tabula_sapiens/tabula_sapiens_large_intestine_82e3b450-6704-43de-8036-af1838daa7df.h5ad\")\nsce.ts_intestine = schard::h5ad2sce(ts_largeintestine_h5ad)\nDT::datatable(head(as.data.frame(colData(sce.ts_intestine))))\nDT::datatable(head(as.data.frame(rowData(sce.ts_intestine))))\n# Not needed, but first filter down to matched genes in our panel\nsce.ts_intestine.genename <- sce.ts_intestine[rowData(sce.ts_intestine)$feature_name %in% rownames(so),]\n\n# Are there any duplicates (we'd need to handle them, but there aren't)\n# takes the count of each feature, then checks that there aren't any >1\nstopifnot(sum(table(rowData(sce.ts_intestine.genename)$feature_name) != 1 ) == 0)\n\n# just rename the genes to the gene names\nrownames(sce.ts_intestine.genename) <-  rowData(sce.ts_intestine.genename)$feature_name\n\n# Pull out the normalised matrix.\n# Quirk of this coming from the python world, the normalised assay is called 'X'\nref_norm_matrix <- assay(sce.ts_intestine.genename, 'X')\nlibrary(BiocParallel) # allow parallelisation with MulticoreParam(). \n\nnorm_matrix <- GetAssayData(so, assay = 'RNA', layer = 'data')\n\npredictions_broad <- SingleR::SingleR(test = norm_matrix,\n                                ref   = ref_norm_matrix,\n                                labels = sce.ts_intestine.genename$broad_cell_class,\n                                aggr.ref = TRUE, # builds a pseudobulk reference , speedier processing\n                                BPPARAM = MulticoreParam(workers=8)\n                                )\n\npredictions_detailed <- SingleR::SingleR(test = norm_matrix,\n                                ref   = ref_norm_matrix,\n                                labels = sce.ts_intestine.genename$cell_type,\n                                aggr.ref = TRUE, # builds a pseudobulk reference , speedier processing\n                                BPPARAM = MulticoreParam(workers=8)\n)\npredictions_broad## DataFrame with 56853 rows and 4 columns\n##                                        scores                 labels delta.next\n##                                      <matrix>            <character>  <numeric>\n## HC_a_1_1     0.1252298:0.0506561:0.146099:... intestinal epithelia..  0.1580519\n## HC_a_2_1     0.1815377:0.1348928:0.249264:... intestinal epithelia..  0.1897494\n## HC_a_3_1     0.0518528:0.0279213:0.059416:... intestinal epithelia..  0.0542868\n## HC_a_4_1     0.1243137:0.1179463:0.130171:... intestinal epithelia..  0.0472000\n## HC_a_5_1     0.1256039:0.0411866:0.114864:... intestinal epithelia..  0.0970837\n## ...                                       ...                    ...        ...\n## CD_c_2598_4 0.0904283:0.1638795:0.0945435:... lymphocyte of b line.. 0.05787367\n## CD_c_2599_4 0.1015837:0.2218872:0.1498716:... lymphocyte of b line.. 0.08493387\n## CD_c_2604_4 0.0225413:0.1048716:0.0181309:... lymphocyte of b line.. 0.00208670\n## CD_c_2606_4 0.1538878:0.1968389:0.1524932:... lymphocyte of b line.. 0.00544398\n## CD_c_2608_4 0.0128855:0.0411252:0.0319291:...   innate lymphoid cell 0.00176397\n##                      pruned.labels\n##                        <character>\n## HC_a_1_1    intestinal epithelia..\n## HC_a_2_1    intestinal epithelia..\n## HC_a_3_1    intestinal epithelia..\n## HC_a_4_1    intestinal epithelia..\n## HC_a_5_1    intestinal epithelia..\n## ...                            ...\n## CD_c_2598_4 lymphocyte of b line..\n## CD_c_2599_4 lymphocyte of b line..\n## CD_c_2604_4 lymphocyte of b line..\n## CD_c_2606_4 lymphocyte of b line..\n## CD_c_2608_4   innate lymphoid cell\n# Check that the order of cells is the same\nstopifnot(all(rownames(predictions_broad) == colnames(so)))\n\n# Then pull in the celltypes from pruned labels, and the 'delta.next' score for each.\nso$singleR_pred_broad    <- predictions_broad$pruned.labels\nso$singleR_pred_detailed <- predictions_detailed$pruned.labels\nso$singleR_delta.next_broad    <- predictions_broad$delta.next\nso$singleR_delta.next_detailed <- predictions_detailed$delta.next\nDimPlot(so, group.by = 'singleR_pred_broad', label = TRUE) \nDimPlot(so, group.by = 'singleR_pred_detailed', label = TRUE) + NoLegend()\nFeaturePlot(so, c('singleR_delta.next_broad','singleR_delta.next_detailed'))\nVlnPlot(so, features='singleR_delta.next_broad', group.by='singleR_pred_broad', pt.size = 0) + NoLegend()\n## Celltype proportions\ncelltype_summary_table<- so@meta.data %>% as_tibble() %>%\n  group_by(seurat_clusters, singleR_pred_broad ) %>%\n  summarise(n_cells = n())\n\n\nggplot(celltype_summary_table, aes(x=seurat_clusters, y=n_cells, fill=singleR_pred_broad)) +\n  geom_bar(position=\"fill\", stat=\"identity\") +\n  theme_bw() +\n  coord_flip() +\n  theme(legend.position = \"bottom\") +\n  scale_y_continuous(expand = c(0,0)) +\n  ggtitle( \"Celltyping vs clustering\") "},{"path":"ClusterLabelling.html","id":"spatial-examination-of-plots","chapter":"12 Clustering Labeling","heading":"12.3 Spatial examination of plots","text":"clusters defined purely transcriptional similarity, plotted tissue, location pattern emerges.\ncan see cluster 1 epithelial cells.Plotting whole sample, zoomed region just one FOVs (cosmx definition) within .broad predictions?","code":"\nso_sample <- so[, so$tissue_sample==\"HC_a\"]\nImageDimPlot(so_sample,\n             fov          = \"GSM7473682.HC.a\",\n             axes = TRUE,\n             border.color = NA, border.size = 0.1,\n             cols = 'polychrome', #See DiscretePalette()\n             group.by = \"seurat_clusters\",\n             boundaries   = \"segmentation\",\n             crop=TRUE)\nso_fov    <- so_sample[, so_sample$fov==1]\nImageDimPlot(so_fov,\n             fov          = \"GSM7473682.HC.a\",\n             axes = TRUE,\n             border.color = NA, border.size = 0.1,\n             cols = 'polychrome', #See DiscretePalette()\n             group.by = \"seurat_clusters\",\n             boundaries   = \"segmentation\",\n             crop=TRUE)\nImageDimPlot(so_fov,\n             fov          = \"GSM7473682.HC.a\",\n             axes = TRUE,\n             border.color = NA, border.size = 0.1,\n             group.by =  'singleR_pred_broad',\n             boundaries   = \"segmentation\",\n             cols = 'polychrome', #See DiscretePalette()\n             crop=TRUE)"},{"path":"ClusterLabelling.html","id":"recording-celltype-annotations","chapter":"12 Clustering Labeling","heading":"12.4 Recording celltype annotations","text":"Note many tools approaches determining celltypes. Especially reference based tool space singleR just one option; See reviewIt may worthwhile seek method uses image positional data conjunction transcriptome - active area research, now, singleR good enough. seeking methods, aware methods developed spot-based technologies (Visium), may necessarily work scale -situ single cell technologies.today, lets apply celltype labels.","code":"\n## Apply some cluster names\nso$cluster_code <- factor( paste0(\"c\", so$seurat_clusters),   levels=paste0('c', levels(so$seurat_clusters)))\nIdents(so) <- so$cluster_code\n\ncluster_content <- list(\n  c0 = \"Stem cell\", # PIGR\n  c1 = \"Plasma cell\", #B lymphocyte lineage: JCHAIN/ MZB1 / DERL3  (typical for Plasma/Plasma/Plasma)\n  c2 = \"Fibroblast\",   \n  c3 = \"Mixed\",  \n  c4 = \"Macrophage and Dendritic cell\",  # See detailed predictions, and macrophages are important in this study.    \n  c5 = \"T cell\",\n  c6 = \"Intestinal epithelial cell\",  # PIGR \n  c7 = \"Contractile cell\",        \n  c8 = \"B cell\",  # B lymphocyte lineage: CD37 / CIITA / IGHM  (B/B/Plasma)           \n  c9 = \"Endothelia\",\n  c10 = \"Granulocyte\"\n)\n\n# c1 => c1: Stem cell\nso$cluster_labels <- factor (\n  paste0(names(cluster_content[as.character(so$cluster_code)]), \": \", cluster_content[as.character(so$cluster_code)]) ,\n  levels = paste0( names(cluster_content), \": \", cluster_content)\n)\nDimPlot(so, group.by='cluster_labels', label = TRUE) + NoLegend()\nso_fov <- so[, so$tissue_sample==\"HC_a\" & so$fov==1]\nImageDimPlot(so_fov,\n             fov          = \"GSM7473682.HC.a\",\n             axes = TRUE,\n             border.color = NA, border.size = 0.1,\n             cols = 'polychrome', \n             group.by = \"cluster_labels\",\n             boundaries   = \"segmentation\",\n             crop=TRUE)"},{"path":"ClusterLabelling.html","id":"pull-in-real-annotation","chapter":"12 Clustering Labeling","heading":"12.5 Pull in real annotation","text":"authors study shared actual celltypes. can simply directly import annotation!many cells per type broad set? tissue?‘singleR2’ set , detailed! much plotting tissue. Macrophage subtypes important paper, didn’t see simple macrophage cluster clusters. can quick heatmap look two classifications compare (can work better many celltypes display nicely colours). NB: plot doesn’t view well small sizes - zoom see labels.","code":"\nannotation_file <- 'data/GSE234713_CosMx_annotation.csv.gz'\nanno_table <- read_csv(annotation_file, show_col_types = F)\nanno_table <- as.data.frame(anno_table)\nrownames(anno_table) <- anno_table$id\n\nso$paper_celltype <- factor(anno_table[colnames(so),]$subset)\nso$paper_singleR2 <- factor(anno_table[colnames(so),]$SingleR2)\ntable(so$paper_celltype)## \n##      epi myeloids  plasmas   stroma   tcells \n##    14972     5866    20226    13102     2665\nso_fov    <- so[, so$tissue_sample==\"HC_a\" & so$fov==1]\nImageDimPlot(so_fov,\n             fov          = \"GSM7473682.HC.a\",\n             axes = TRUE,\n             border.color = NA, border.size = 0.1,\n             group.by = \"paper_celltype\",\n             boundaries   = \"segmentation\",\n             crop=TRUE)\ntable(so$paper_singleR2)## \n##                       B cell                  BEST4 OTOP2 \n##                         1205                         1596 \n##                          CD4                          CD8 \n##                          835                          551 \n##                  Colonocytes                Cycling cells \n##                         2978                          309 \n##              Cycling myeloid              Cycling T cells \n##                          235                           57 \n##                   Cycling TA                          DCs \n##                          332                          233 \n##                           DN                  Endothelium \n##                          140                         1943 \n##              Enteroendocrine                  Eosinophils \n##                          182                           23 \n##             Epithelium Ribhi                  Fibroblasts \n##                          952                          280 \n##                         FRCs                    GC B cell \n##                         1390                          777 \n##                       gd IEL                         Glia \n##                           80                          734 \n##                       Goblet                         ILC4 \n##                         1915                           35 \n##     Inflammatory fibroblasts       Inflammatory monocytes \n##                         1314                          102 \n##                           M0                           M1 \n##                          596                           50 \n##                           M2              Macrophage NRG1 \n##                         2821                         1180 \n##                         MAIT                         Mast \n##                          265                          497 \n##                Memory B cell                   MT T cells \n##                         1481                           31 \n##               Myofibroblasts                           N1 \n##                         3689                           38 \n##                           N2                           N3 \n##                           47                           44 \n##                 Naïve B cell                           NK \n##                         2022                           40 \n##                  Paneth-like PC  immediate early response \n##                          161                         1575 \n##                       PC IgA            PC IgA heat shock \n##                          316                          932 \n##                   PC IgA IgM                       PC IgG \n##                         3228                         8380 \n##                    Pericytes                Ribhi T cells \n##                         1259                           21 \n##                           S1                          S2a \n##                          822                          551 \n##                          S2b                           S3 \n##                          658                          462 \n##         Secretory progenitor                T cells CCL20 \n##                         6445                           99 \n##                        Tregs                   Tuft cells \n##                          511                          411\nheatmap(table(so$paper_singleR2, so$cluster_labels), Rowv = NA, Colv=NA, margins = c(15, 10)) # base R heatmap - makes margin bigger to fit names"},{"path":"ClusterLabelling.html","id":"use-the-annotations","chapter":"12 Clustering Labeling","heading":"12.6 Use the annotations!","text":"Now can fun plots cell types - instance see ’s change proportions samples. test formally propeller","code":"\n## Celltype proportions\ncelltype_summary_table<- so@meta.data %>% as_tibble() %>%\n  group_by(condition, tissue_sample, cluster_labels ) %>%\n  summarise(n_cells = n())## `summarise()` has grouped output by 'condition', 'tissue_sample'. You can\n## override using the `.groups` argument.\nggplot(celltype_summary_table, aes(x=tissue_sample, y=n_cells, fill=cluster_labels)) +\n  geom_bar(position=\"fill\", stat=\"identity\") +\n  theme_bw() +\n  coord_flip() +\n  theme(legend.position = \"bottom\") +\n  scale_y_continuous(expand = c(0,0)) +\n  ggtitle( \"Celltype composition\") +\n  facet_wrap(~condition, ncol = 1, scales = 'free_y')"},{"path":"SpatiallyRestrictedGenes.html","id":"SpatiallyRestrictedGenes","chapter":"13 Spatially Restricted Genes","heading":"13 Spatially Restricted Genes","text":"Link directly??? https://swbioinf.github.io/spatialsnippets/e_spatiallyRestrictedGenes.htmlWhat genes irregular expression across tissue? might localised particular region indicate spatial activity.Considering signle gene, calculate ‘spatial autocorrelation’ MoransI test.","code":"\nlibrary(tidyverse)\nlibrary(Seurat)\nlibrary(DT)## \n## Attaching package: 'DT'## The following object is masked from 'package:Seurat':\n## \n##     JS## The following object is masked from 'package:SeuratObject':\n## \n##     JS\n#so <- readRDS(\"data/GSE234713_CosMx_IBD_seurat_01_preprocessed_subsampled.RDS\" )"},{"path":"SpatiallyRestrictedGenes.html","id":"run-moransi-once","chapter":"13 Spatially Restricted Genes","heading":"13.1 Run MoransI once","text":"run quickly, going arbitraily reduce number variable features just 20.real line, pick VariableFeatures (genes).","code":"\nso <- FindVariableFeatures(so, nfeatures=10)## Finding variable features for layer counts\nthe_sample <- 'CD_a'\nthe_fov    <- 'GSM7473688.CD.a'\nso_sample  <- subset(so, tissue_sample == the_sample)## Warning: Not validating Seurat objects\n## Not validating Seurat objects\n## Not validating Seurat objects## Warning: Not validating FOV objects## Warning: Not validating Centroids objects\n## Not validating Centroids objects## Warning: Not validating FOV objects## Warning: Not validating Centroids objects## Warning: Not validating FOV objects\n## Not validating FOV objects\n## Not validating FOV objects## Warning: Not validating Seurat objects\n## Not validating Seurat objects\n## Not validating Seurat objects\n# If the Seurat method above crashes (segfault), a workaround is\n# funning FindSpatiallyVariableFeatures at the assay level\nso_sample_assay <- so_sample[['RNA']]\ntc <- GetTissueCoordinates(so_sample)\nrownames(tc)<- tc$cell\n# When given an 'assay' FindSpatiallyVariableFeatures returns an assay. Put it back in the seurat object\nso_sample[['RNA']] <- FindSpatiallyVariableFeatures(\n  so_sample_assay,\n  layer = \"scale.data\",\n  spatial.location = tc,\n  features = VariableFeatures(so_sample)[1:10], # Just a random few variable genes for testing!\n  selection.method = \"moransi\",\n  nfeatures=10 # mark top 10 spatially variable\n)## Computing Moran's I## Warning in dist(x = pos): NAs introduced by coercion## Found more than one class \"dist\" in cache; using the first, from namespace 'spam'## Also defined by 'BiocGenerics'## Found more than one class \"dist\" in cache; using the first, from namespace 'spam'## Also defined by 'BiocGenerics'\n#Put feature name as a column in the feature metadata\nso_sample[[\"RNA\"]]@meta.data$feature <-rownames(so_sample[[\"RNA\"]])\ngene_metadata <- so_sample[[\"RNA\"]]@meta.data\n\ngene_metadata_morans <- \n  filter(gene_metadata, !is.na(moransi.spatially.variable.rank)) %>%\n  select(feature, \n         MoransI_observed, MoransI_p.value, moransi.spatially.variable,moransi.spatially.variable.rank) %>% \n  arrange(moransi.spatially.variable.rank)\n  \nDT::datatable(gene_metadata_morans, width = '100%')\ntop_genes = gene_metadata_morans$feature[1:3]\ntop_genes## [1] \"KRT20\" \"IGHM\"  \"AQP8\"\nImageDimPlot(so_sample, \n             molecules = top_genes, \n             group.by = 'tissue_sample', cols = c(\"grey30\"), # Make all cells grey.\n             boundaries = \"segmentation\",\n             border.color = NA, axes = T, crop=TRUE)"},{"path":"SpatiallyRestrictedGenes.html","id":"run-moransi-on-all-samples","chapter":"13 Spatially Restricted Genes","heading":"13.2 Run MoransI on all samples","text":"expression pattern gene disrupted?","code":"\n# Record moransI results for each sample, one by one.\nsamples <- unique(so@meta.data$tissue_sample)\nresults_list <- list()\nfor (the_sample in samples) {\n  \n  so.sample <- subset( so, subset= tissue_sample == the_sample)\n\n  so.sample.assay <- so.sample[['RNA']]\n  tc <- GetTissueCoordinates(so.sample)\n  rownames(tc)<- tc$cell\n  # When given an 'assay' FindSpatiallyVariableFeatures returns an assay. Put it back in the seurat object.\n  so.sample[['RNA']] <- FindSpatiallyVariableFeatures(\n    so.sample.assay,\n    layer = \"scale.data\",\n    spatial.location = tc,\n    features = VariableFeatures(so.sample),\n    selection.method = \"moransi\",\n    nfeatures=10 # mark top 10 spatially variable\n    )\n  # --- end workaround\n  \n  \n  # Format output table\n  so.sample[[\"RNA\"]]@meta.data$feature <- rownames(so.sample[[\"RNA\"]])\n  gene_metadata <- so.sample[[\"RNA\"]]@meta.data\n  results <- \n  select(gene_metadata, \n         feature, \n         MoransI_observed, \n         MoransI_p.value, \n         moransi.spatially.variable,\n         moransi.spatially.variable.rank) %>% \n    filter(!is.na(moransi.spatially.variable.rank)) %>% # only tested\n    arrange(moransi.spatially.variable.rank) %>%\n    mutate(sample = the_sample) %>%\n    select(sample, everything())\n\n  \n  results_list[[the_sample]] <- results\n}## Warning: Not validating FOV objects## Warning: Not validating Centroids objects\n## Not validating Centroids objects## Warning: Not validating FOV objects## Warning: Not validating Centroids objects## Warning: Not validating FOV objects\n## Not validating FOV objects\n## Not validating FOV objects## Warning: Not validating Seurat objects\n## Not validating Seurat objects\n## Not validating Seurat objects\n## Not validating Seurat objects\n## Not validating Seurat objects\n## Not validating Seurat objects## Computing Moran's I## Warning in dist(x = pos): NAs introduced by coercion\n## Warning in dist(x = pos): Not validating Seurat objects## Warning: Not validating FOV objects## Warning: Not validating Centroids objects\n## Not validating Centroids objects## Warning: Not validating FOV objects## Warning: Not validating Centroids objects## Warning: Not validating FOV objects\n## Not validating FOV objects\n## Not validating FOV objects## Warning: Not validating Seurat objects\n## Not validating Seurat objects\n## Not validating Seurat objects\n## Not validating Seurat objects\n## Not validating Seurat objects## Computing Moran's I## Warning in dist(x = pos): NAs introduced by coercion\n## Warning in dist(x = pos): Not validating Seurat objects\n## Warning in dist(x = pos): Not validating Seurat objects## Warning: Not validating FOV objects## Warning: Not validating Centroids objects\n## Not validating Centroids objects## Warning: Not validating FOV objects## Warning: Not validating Centroids objects## Warning: Not validating FOV objects\n## Not validating FOV objects\n## Not validating FOV objects## Warning: Not validating Seurat objects\n## Not validating Seurat objects\n## Not validating Seurat objects\n## Not validating Seurat objects## Computing Moran's I## Warning in dist(x = pos): NAs introduced by coercion\n## Warning in dist(x = pos): Not validating Seurat objects\n## Warning in dist(x = pos): Not validating Seurat objects\n## Warning in dist(x = pos): Not validating Seurat objects## Warning: Not validating FOV objects## Warning: Not validating Centroids objects\n## Not validating Centroids objects## Warning: Not validating FOV objects## Warning: Not validating Centroids objects## Warning: Not validating FOV objects\n## Not validating FOV objects\n## Not validating FOV objects## Warning: Not validating Seurat objects\n## Not validating Seurat objects\n## Not validating Seurat objects## Computing Moran's I## Warning in dist(x = pos): NAs introduced by coercion\n## Warning in dist(x = pos): Not validating Seurat objects\n## Warning in dist(x = pos): Not validating Seurat objects\n## Warning in dist(x = pos): Not validating Seurat objects\n## Warning in dist(x = pos): Not validating Seurat objects## Warning: Not validating FOV objects## Warning: Not validating Centroids objects\n## Not validating Centroids objects## Warning: Not validating FOV objects## Warning: Not validating Centroids objects## Warning: Not validating FOV objects\n## Not validating FOV objects\n## Not validating FOV objects## Warning: Not validating Seurat objects\n## Not validating Seurat objects## Computing Moran's I## Warning in dist(x = pos): NAs introduced by coercion\n## Warning in dist(x = pos): Not validating Seurat objects\n## Warning in dist(x = pos): Not validating Seurat objects\n## Warning in dist(x = pos): Not validating Seurat objects\n## Warning in dist(x = pos): Not validating Seurat objects\n## Warning in dist(x = pos): Not validating Seurat objects## Warning: Not validating FOV objects## Warning: Not validating Centroids objects\n## Not validating Centroids objects## Warning: Not validating FOV objects## Warning: Not validating Centroids objects## Warning: Not validating FOV objects\n## Not validating FOV objects\n## Not validating FOV objects## Warning: Not validating Seurat objects## Computing Moran's I## Warning in dist(x = pos): NAs introduced by coercion\n# Collect output result \nresults_all <- bind_rows(results_list)\n# unique set of genes that were top 10 morans in any sample\nplot_genes <- filter(results_all, moransi.spatially.variable.rank <= 10) %>% pull(feature) %>% unique()\nggplot(filter(results_all, feature %in% plot_genes), aes(x=feature, y=MoransI_observed)) +\n  geom_boxplot() +\n  geom_point( mapping=aes(col=sample)) +\n  theme_bw() +\n  ggtitle(\"MoransI Per sample\")"},{"path":"SpatiallyRestrictedGenes.html","id":"explore-moransi-results","chapter":"13 Spatially Restricted Genes","heading":"13.3 Explore moransI results","text":"IGKC high autocorrelation overA highly variable gene, low(er) spatial autocorrelationWhats going ? ’s big clump CCL21","code":"\nso.CD_a <- subset( so, subset= tissue_sample == 'CD_a')## Warning: Not validating Seurat objects\n## Not validating Seurat objects\n## Not validating Seurat objects## Warning: Not validating FOV objects## Warning: Not validating Centroids objects\n## Not validating Centroids objects## Warning: Not validating FOV objects## Warning: Not validating Centroids objects## Warning: Not validating FOV objects\n## Not validating FOV objects\n## Not validating FOV objects## Warning: Not validating Seurat objects\n## Not validating Seurat objects\n## Not validating Seurat objects\nso.HC_a <- subset( so, subset= tissue_sample == 'HC_a')## Warning: Not validating FOV objects## Warning: Not validating Centroids objects\n## Not validating Centroids objects## Warning: Not validating FOV objects## Warning: Not validating Centroids objects## Warning: Not validating FOV objects\n## Not validating FOV objects\n## Not validating FOV objects## Warning: Not validating Seurat objects\n## Not validating Seurat objects\n## Not validating Seurat objects\n## Not validating Seurat objects\n## Not validating Seurat objects\n## Not validating Seurat objects\np1 <- ImageDimPlot(so.CD_a, \n             molecules = 'IGKC', \n             group.by = 'tissue_sample', cols = c(\"grey30\"), # Make all cells grey.\n             boundaries = \"segmentation\", border.color = NA, axes = T, crop=TRUE)## Warning in brewer.pal(n = length(x = levels(x = molecules$molecule)), name = \"Set1\"): minimal value for n is 3, returning requested palette with 3 different levels\np2 <- ImageDimPlot(so.HC_a, \n             molecules = 'IGKC', \n             group.by = 'tissue_sample', cols = c(\"grey30\"), # Make all cells grey.\n             boundaries = \"segmentation\", border.color = NA, axes = T, crop=TRUE)## Warning in brewer.pal(n = length(x = levels(x = molecules$molecule)), name = \"Set1\"): minimal value for n is 3, returning requested palette with 3 different levels\np1 + p2 \np1 <- ImageDimPlot(so.CD_a, \n             molecules = 'CHGA', \n             group.by = 'tissue_sample', cols = c(\"grey30\"), # Make all cells grey.\n             boundaries = \"segmentation\", border.color = NA, axes = T, crop=TRUE)## Warning in brewer.pal(n = length(x = levels(x = molecules$molecule)), name = \"Set1\"): minimal value for n is 3, returning requested palette with 3 different levels\np2 <- ImageDimPlot(so.HC_a, \n             molecules = 'CHGA', \n             group.by = 'tissue_sample', cols = c(\"grey30\"), # Make all cells grey.\n             boundaries = \"segmentation\", border.color = NA, axes = T, crop=TRUE)## Warning in brewer.pal(n = length(x = levels(x = molecules$molecule)), name = \"Set1\"): minimal value for n is 3, returning requested palette with 3 different levels\np1 + p2 \np1 <- ImageDimPlot(so.CD_a, \n             molecules = 'CCL21', \n             group.by = 'tissue_sample', cols = c(\"grey30\"), # Make all cells grey.\n             boundaries = \"segmentation\", border.color = NA, axes = T, crop=TRUE)## Warning in brewer.pal(n = length(x = levels(x = molecules$molecule)), name = \"Set1\"): minimal value for n is 3, returning requested palette with 3 different levels\np2 <- ImageDimPlot(so.HC_a, \n             molecules = 'CCL21', \n             group.by = 'tissue_sample', cols = c(\"grey30\"), # Make all cells grey.\n             boundaries = \"segmentation\", border.color = NA, axes = T, crop=TRUE)## Warning in brewer.pal(n = length(x = levels(x = molecules$molecule)), name = \"Set1\"): minimal value for n is 3, returning requested palette with 3 different levels\np1 + p2 \nImageDimPlot(so.HC_a, group.by = 'fov')\nImageDimPlot(subset(so.HC_a, fov==4), \n             molecules = 'CCL21', \n             group.by = 'cluster_labels', alpha=0.3,# Show clusters, but faded \n             boundaries = \"segmentation\",  border.color = NA, axes = T, crop=TRUE) ## Warning: Not validating FOV objects## Warning: Not validating Centroids objects\n## Not validating Centroids objects## Warning: Not validating FOV objects## Warning: Not validating Centroids objects## Warning: Not validating FOV objects\n## Not validating FOV objects\n## Not validating FOV objects## Warning: Not validating Seurat objects## Warning in brewer.pal(n = length(x = levels(x = molecules$molecule)), name = \"Set1\"): minimal value for n is 3, returning requested palette with 3 different levels\nImageDimPlot(subset(so.HC_a, fov==4),\n             molecules = c('CCL21','CD8A','MS4A1'), \n             group.by = 'cluster_labels', alpha=0.3,# Show clusters, but faded \n             boundaries = \"segmentation\",  border.color = NA, axes = T, crop=TRUE) ## Warning: Not validating FOV objects## Warning: Not validating Centroids objects\n## Not validating Centroids objects## Warning: Not validating FOV objects## Warning: Not validating Centroids objects## Warning: Not validating FOV objects\n## Not validating FOV objects\n## Not validating FOV objects## Warning: Not validating Seurat objects"},{"path":"SpatiallyRestrictedGenes.html","id":"co-occurance-tests-potential-addition","chapter":"13 Spatially Restricted Genes","heading":"13.4 Co-occurance tests? (Potential addition)","text":"Try test foc co-occurance CCL21 cluuster (MS4A1)Easiest way might conversion SFE use voyager per bivariat stats workflow: https://pachterlab.github.io/voyager/articles/bivariate.html","code":""},{"path":"next-steps.html","id":"next-steps","chapter":"14 Next steps","heading":"14 Next steps","text":"","code":""},{"path":"next-steps.html","id":"the-scope-of-what-was-done-with-this-data","chapter":"14 Next steps","heading":"14.1 The scope of what was done with this data:","text":"Wrap (10)\npreprocessed data, now run tests/analysisSummarise Garrido-Trigo et al actually dataset paper;Macrophage proximity testsIntegration single cell dataintegration spatial omics…","code":""},{"path":"next-steps.html","id":"other-techniques.","chapter":"14 Next steps","heading":"14.2 Other techniques.","text":"SegmentationGood cell segmentation images underpins downstream analysis. Different platforms offer inbuilt segmentation methods, often require tweaking default different tissues, antibodies runs.-machine segmentation: e.g. Xenium/CosmxDirectly images using specialised microscopy methods segmentation.https://www.bioconductor.org/packages/release/bioc/html/MoleculeExperiment.htmlSample annotationIt’s typical multiple samples single slide. need label cell ID.Define samples centroid x-y coordinatesTHERE’S GOT BETTER WAY little ‘cicle’ interactive tool.VisualisationNapariCellXGene (single cells)iSEE (single cell)Xenium explorer (Xenium )Atomx (cosmx )Niche analysisCell neighbour niche analysis major avenue situ spatial analysise. E.g. DefiningSeuruat findNiches()OSCA neighbourhood analyses: https://lmweber.org/OSTA/pages/img-neighborhood-analysis.htmlhoodscanR : https://www.bioconductor.org/packages/release/bioc/vignettes/hoodscanR/inst/doc/Quick_start.html‘Spatial’ pattern tests cell free analysesSpatial tests, adapted form geospatial methods: https://pachterlab.github.io/voyager/Co-localisation differntial co-localisation: https://lmweber.org/OSTA/pages/mult-diff-spatial-patterns.htmlMolecule level data object (SingleCellExperiment): https://www.bioconductor.org/packages/release/bioc/html/MoleculeExperiment.htmlMultiomicshttps://lmweber.org/OSTA/pages/crs-spatial-registration.htmlhttps://satijalab.org/seurat/articles/multimodal_vignette (single cell)","code":""},{"path":"resources.html","id":"resources","chapter":"15 Resources","heading":"15 Resources","text":"Links various useful resources.Single cell best practicies : Comprehensive resource single cell analysisSingle cell best practicies : Comprehensive resource single cell analysisOSCA - (Orchestrating Single Cell Analayis bioconductor ) : detailed resource single cell analyses using bioconductor ecosystem packages - still applicable certain spatial analyses.OSCA - (Orchestrating Single Cell Analayis bioconductor ) : detailed resource single cell analyses using bioconductor ecosystem packages - still applicable certain spatial analyses.OSTA (Orchestrating Spatial Transcriptomics Analysis Bioconductor : detailed resource perform spatial analyses using bioconductor ecosystem packages. Even using Seurat, useful resource detailed explanations analysis tasks.OSTA (Orchestrating Spatial Transcriptomics Analysis Bioconductor : detailed resource perform spatial analyses using bioconductor ecosystem packages. Even using Seurat, useful resource detailed explanations analysis tasks.Voyager Documentaion: bioconductor package spatial analyses, centred around SpatialFeatureExperiment objectsVoyager Documentaion: bioconductor package spatial analyses, centred around SpatialFeatureExperiment objectsSCverse: ecosystem analysing single cell spatial single cell data python.SCverse: ecosystem analysing single cell spatial single cell data python.Seurat spatial vignette (imaging-based ) : load plot spatial data seurat - covers different technologies.Seurat spatial vignette (imaging-based ) : load plot spatial data seurat - covers different technologies.Spatial Sampler : Worked examples code snippets run various statistical tests single cell spatial data.Spatial Sampler : Worked examples code snippets run various statistical tests single cell spatial data.Understanding UMAP : Exploring UMAP works, affects .Understanding UMAP : Exploring UMAP works, affects .Propeller testing celltype proportion changes: speckle package tools test changes celltype proportions groupsPropeller testing celltype proportion changes: speckle package tools test changes celltype proportions groups‘Introduction scRNA-seq integration’ vignette.‘Introduction scRNA-seq integration’ vignette.clustree : useful toolkit choosing cluster resolutions.clustree : useful toolkit choosing cluster resolutions.Biologists, stop putting UMAP plots papers: discussion UMAPs can sometimes misinterpretedBiologists, stop putting UMAP plots papers: discussion UMAPs can sometimes misinterpretedhttps://www.10xgenomics.com/analysis-guideshttps://www.10xgenomics.com/analysis-guidesOther referencesKorsunsky et al 2019: Harmony paperAntonsson Melsted (2025) : Review batch correction methods single cell data","code":""},{"path":"references.html","id":"references","chapter":"References","heading":"References","text":"","code":""}]
